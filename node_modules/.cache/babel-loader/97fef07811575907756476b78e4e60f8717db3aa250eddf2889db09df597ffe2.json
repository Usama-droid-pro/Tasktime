{"ast":null,"code":"var _jsxFileName = \"/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/pages/LogTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Input from '../components/ui/Input';\nimport Select from '../components/ui/Select';\nimport Calendar from '../components/ui/Calendar';\nimport { Plus, Trash2, CheckCircle, AlertCircle } from 'lucide-react';\nimport { DUMMY_PROJECTS } from '../constants/dummyData';\nimport { cn } from '../utils/helpers';\nimport ViewLogs from '../components/ViewLogs';\nimport { timesheetService, authService } from '../services';\nimport { transformFormToTaskLog } from '../utils/timesheet.utils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LogTask = () => {\n  _s();\n  var _currentUser$name, _currentUser$name$cha;\n  const [searchParams] = useSearchParams();\n  const isFromEmployees = searchParams.get('user') && searchParams.get('name');\n  const [activeTab, setActiveTab] = useState(isFromEmployees ? 'view' : 'log');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [totalHours, setTotalHours] = useState('');\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    projectId: '',\n    description: '',\n    hours: ''\n  }]);\n\n  // New state for API integration\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  // Get current user info\n  const currentUser = authService.getUser();\n  const isAuthenticated = authService.isAuthenticated();\n  const addTask = () => {\n    const newTask = {\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: ''\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Real-time validation for total hours\n  const calculateTaskHoursSum = () => {\n    return tasks.reduce((sum, task) => {\n      const hours = parseFloat(task.hours) || 0;\n      return sum + hours;\n    }, 0);\n  };\n  const getHoursValidationStatus = () => {\n    const total = parseFloat(totalHours) || 0;\n    const taskSum = calculateTaskHoursSum();\n    const difference = Math.abs(total - taskSum);\n    if (!totalHours || total === 0) return null;\n    if (taskSum === 0) return null;\n    return {\n      isValid: difference <= 0.01,\n      total,\n      taskSum,\n      difference\n    };\n  };\n  const removeTask = taskId => {\n    if (tasks.length > 1) {\n      setTasks(tasks.filter(task => task.id !== taskId));\n    }\n  };\n  const updateTask = (taskId, field, value) => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      [field]: value\n    } : task));\n    // Clear validation errors when user starts typing\n    if (validationErrors.length > 0) {\n      setValidationErrors([]);\n    }\n  };\n  const projectOptions = DUMMY_PROJECTS.map(project => ({\n    value: project.id,\n    label: project.name\n  }));\n  const resetForm = () => {\n    setSelectedDate(new Date().toISOString().split('T')[0]);\n    setTotalHours('');\n    setTasks([{\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: ''\n    }]);\n    setValidationErrors([]);\n    setSubmitError(null);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous states\n    setSubmitError(null);\n    setValidationErrors([]);\n    setSubmitSuccess(false);\n\n    // Create form data object\n    const formData = {\n      date: selectedDate,\n      totalHours,\n      tasks\n    };\n\n    // Validate form\n    const validation = validateCompleteForm(formData);\n    if (!validation.isValid) {\n      setValidationErrors(validation.errors);\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      // Get current user from auth service\n      const currentUser = authService.getUser();\n      const employeeId = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) || '1'; // Fallback to '1' if no user is logged in\n\n      // Transform form data to API format\n      const taskLogData = transformFormToTaskLog(formData, employeeId, DUMMY_PROJECTS);\n\n      // Submit to API\n      await timesheetService.createTaskLog(taskLogData);\n\n      // Success handling\n      setSubmitSuccess(true);\n      setTimeout(() => {\n        setSubmitSuccess(false);\n        resetForm();\n      }, 3000);\n    } catch (error) {\n      console.error('Failed to submit time logs:', error);\n      setSubmitError(error instanceof Error ? error.message : 'Failed to save time logs. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Log Task\",\n    subtitle: \"Track your daily work hours\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-excel-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b border-excel-border\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"-mb-px flex space-x-excel-xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('log'),\n            className: cn('py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150', activeTab === 'log' ? 'border-excel-blue-500 text-excel-blue-500' : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'),\n            children: \"Log your task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('view'),\n            className: cn('py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150', activeTab === 'view' ? 'border-excel-blue-500 text-excel-blue-500' : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'),\n            children: \"View Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), activeTab === 'log' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-excel-border rounded-excel p-excel-xl\",\n        children: [isAuthenticated && currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 border border-blue-200 rounded-excel p-excel-md mb-excel-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-excel-sm font-medium\",\n              children: ((_currentUser$name = currentUser.name) === null || _currentUser$name === void 0 ? void 0 : (_currentUser$name$cha = _currentUser$name.charAt(0)) === null || _currentUser$name$cha === void 0 ? void 0 : _currentUser$name$cha.toUpperCase()) || 'U'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-sm font-medium text-blue-900\",\n                children: [\"Logging time for: \", currentUser.name || 'Unknown User']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-xs text-blue-700\",\n                children: [currentUser.email, \" \\u2022 \", currentUser.role || 'No role']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-50 border border-yellow-200 rounded-excel p-excel-md mb-excel-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-5 h-5 text-yellow-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-sm font-medium text-yellow-900\",\n                children: \"Not authenticated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-xs text-yellow-700\",\n                children: \"Time logs will be saved with a default user ID. Please log in for proper user tracking.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"space-y-excel-xl\",\n          children: [submitSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-50 border border-green-200 rounded-excel p-excel-md flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-5 h-5 text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-800 text-excel-sm font-medium\",\n              children: \"Time logs saved successfully! Form will reset in a moment.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), (submitError || validationErrors.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-50 border border-red-200 rounded-excel p-excel-md\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start space-x-excel-md\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                className: \"w-5 h-5 text-red-600 mt-0.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"text-red-800 text-excel-sm font-medium mb-excel-sm\",\n                  children: \"Please fix the following errors:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"text-red-700 text-excel-sm space-y-excel-xs\",\n                  children: [submitError && /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"\\u2022 \", submitError]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 41\n                  }, this), validationErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"\\u2022 \", error]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-excel-xl\",\n            children: [/*#__PURE__*/_jsxDEV(Calendar, {\n              label: \"Select Date\",\n              value: selectedDate,\n              onChange: setSelectedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-excel-sm\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                label: \"Total Hours\",\n                type: \"number\",\n                step: \"0.5\",\n                min: \"0\",\n                max: \"24\",\n                placeholder: \"Enter total hours worked\",\n                value: totalHours,\n                onChange: e => {\n                  setTotalHours(e.target.value);\n                  // Clear validation errors when user starts typing\n                  if (validationErrors.length > 0) {\n                    setValidationErrors([]);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), (() => {\n                const validation = getHoursValidationStatus();\n                if (!validation) return null;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: cn(\"text-excel-xs px-excel-sm py-excel-xs rounded-excel flex items-center space-x-excel-xs\", validation.isValid ? \"bg-green-50 text-green-700\" : \"bg-yellow-50 text-yellow-700\"),\n                  children: validation.isValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                      className: \"w-3 h-3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Hours match (Total: \", validation.total, \", Tasks: \", validation.taskSum, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                      className: \"w-3 h-3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Hours mismatch (Total: \", validation.total, \", Tasks: \", validation.taskSum, \", Difference: \", validation.difference.toFixed(2), \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this);\n              })()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-excel-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-excel-lg font-semibold text-excel-text-primary\",\n                children: \"Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"outline\",\n                size: \"sm\",\n                leftIcon: /*#__PURE__*/_jsxDEV(Plus, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 31\n                }, this),\n                onClick: addTask,\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-excel-lg\",\n              children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-excel-border rounded-excel p-excel-lg bg-excel-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between mb-excel-md\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-excel-sm font-medium text-excel-text-primary\",\n                    children: [\"Task \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 25\n                  }, this), tasks.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    variant: \"ghost\",\n                    size: \"sm\",\n                    onClick: () => removeTask(task.id),\n                    className: \"text-red-600 hover:text-red-700 hover:bg-red-50\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-1 md:grid-cols-3 gap-excel-lg\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      label: \"Project\",\n                      options: projectOptions,\n                      placeholder: \"Select project...\",\n                      value: task.projectId,\n                      onChange: e => updateTask(task.id, 'projectId', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 27\n                    }, this), !task.projectId && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Project')) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-red-600 text-excel-xs mt-excel-xs\",\n                      children: \"Project is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      label: \"Description\",\n                      placeholder: \"Enter task description...\",\n                      value: task.description,\n                      onChange: e => updateTask(task.id, 'description', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 27\n                    }, this), !task.description.trim() && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Description')) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-red-600 text-excel-xs mt-excel-xs\",\n                      children: \"Description is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      label: \"Hours\",\n                      type: \"number\",\n                      step: \"0.5\",\n                      min: \"0\",\n                      max: \"24\",\n                      placeholder: \"Hours\",\n                      value: task.hours,\n                      onChange: e => updateTask(task.id, 'hours', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 27\n                    }, this), (() => {\n                      const hours = parseFloat(task.hours);\n                      const hasHoursError = validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Hours'));\n                      if (hasHoursError) {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-red-600 text-excel-xs mt-excel-xs\",\n                          children: \"Valid hours required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 405,\n                          columnNumber: 38\n                        }, this);\n                      }\n                      return null;\n                    })()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: resetForm,\n              disabled: isSubmitting,\n              children: \"Reset Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              disabled: isSubmitting,\n              children: isSubmitting ? 'Saving...' : 'Log Tasks'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), activeTab === 'view' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-[calc(100vh-200px)]\",\n        children: /*#__PURE__*/_jsxDEV(ViewLogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(LogTask, \"etmsqQvzNCtMoZeD8noHKLwTMK8=\", false, function () {\n  return [useSearchParams];\n});\n_c = LogTask;\nexport default LogTask;\nvar _c;\n$RefreshReg$(_c, \"LogTask\");","map":{"version":3,"names":["React","useState","useSearchParams","DashboardLayout","Button","Input","Select","Calendar","Plus","Trash2","CheckCircle","AlertCircle","DUMMY_PROJECTS","cn","ViewLogs","timesheetService","authService","transformFormToTaskLog","jsxDEV","_jsxDEV","Fragment","_Fragment","LogTask","_s","_currentUser$name","_currentUser$name$cha","searchParams","isFromEmployees","get","activeTab","setActiveTab","selectedDate","setSelectedDate","Date","toISOString","split","totalHours","setTotalHours","tasks","setTasks","id","projectId","description","hours","isSubmitting","setIsSubmitting","submitError","setSubmitError","submitSuccess","setSubmitSuccess","validationErrors","setValidationErrors","currentUser","getUser","isAuthenticated","addTask","newTask","now","toString","calculateTaskHoursSum","reduce","sum","task","parseFloat","getHoursValidationStatus","total","taskSum","difference","Math","abs","isValid","removeTask","taskId","length","filter","updateTask","field","value","map","projectOptions","project","label","name","resetForm","handleSubmit","e","preventDefault","formData","date","validation","validateCompleteForm","errors","employeeId","taskLogData","createTaskLog","setTimeout","error","console","Error","message","title","subtitle","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","email","role","onSubmit","index","onChange","type","step","min","max","placeholder","target","toFixed","variant","size","leftIcon","options","some","includes","trim","hasHoursError","disabled","_c","$RefreshReg$"],"sources":["/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/pages/LogTask.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Input from '../components/ui/Input';\nimport Select from '../components/ui/Select';\nimport Calendar from '../components/ui/Calendar';\nimport { Plus, Trash2, CheckCircle, AlertCircle } from 'lucide-react';\nimport { DUMMY_PROJECTS, Project } from '../constants/dummyData';\nimport { cn } from '../utils/helpers';\nimport ViewLogs from '../components/ViewLogs';\nimport { timesheetService, authService } from '../services';\nimport { \n  validateFormFields, \n  transformFormToTaskLog, \n  TaskEntry as TaskEntryType,\n  DailyLogForm \n} from '../utils/timesheet.utils';\n\ninterface LogTaskProps {}\n\nconst LogTask: React.FC<LogTaskProps> = () => {\n  const [searchParams] = useSearchParams();\n  const isFromEmployees = searchParams.get('user') && searchParams.get('name');\n  \n  const [activeTab, setActiveTab] = useState<'log' | 'view'>(\n    isFromEmployees ? 'view' : 'log'\n  );\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [totalHours, setTotalHours] = useState('');\n  const [tasks, setTasks] = useState<TaskEntryType[]>([\n    {\n      id: '1',\n      projectId: '',\n      description: '',\n      hours: '',\n    },\n  ]);\n  \n  // New state for API integration\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState<string | null>(null);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n  \n  // Get current user info\n  const currentUser = authService.getUser();\n  const isAuthenticated = authService.isAuthenticated();\n\n  const addTask = () => {\n    const newTask: TaskEntryType = {\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: '',\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Real-time validation for total hours\n  const calculateTaskHoursSum = () => {\n    return tasks.reduce((sum, task) => {\n      const hours = parseFloat(task.hours) || 0;\n      return sum + hours;\n    }, 0);\n  };\n\n  const getHoursValidationStatus = () => {\n    const total = parseFloat(totalHours) || 0;\n    const taskSum = calculateTaskHoursSum();\n    const difference = Math.abs(total - taskSum);\n    \n    if (!totalHours || total === 0) return null;\n    if (taskSum === 0) return null;\n    \n    return {\n      isValid: difference <= 0.01,\n      total,\n      taskSum,\n      difference\n    };\n  };\n\n  const removeTask = (taskId: string) => {\n    if (tasks.length > 1) {\n      setTasks(tasks.filter(task => task.id !== taskId));\n    }\n  };\n\n  const updateTask = (taskId: string, field: keyof TaskEntryType, value: string) => {\n    setTasks(tasks.map(task => \n      task.id === taskId ? { ...task, [field]: value } : task\n    ));\n    // Clear validation errors when user starts typing\n    if (validationErrors.length > 0) {\n      setValidationErrors([]);\n    }\n  };\n\n  const projectOptions = DUMMY_PROJECTS.map((project: Project) => ({\n    value: project.id,\n    label: project.name,\n  }));\n\n  const resetForm = () => {\n    setSelectedDate(new Date().toISOString().split('T')[0]);\n    setTotalHours('');\n    setTasks([{\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: '',\n    }]);\n    setValidationErrors([]);\n    setSubmitError(null);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Clear previous states\n    setSubmitError(null);\n    setValidationErrors([]);\n    setSubmitSuccess(false);\n    \n    // Create form data object\n    const formData: DailyLogForm = {\n      date: selectedDate,\n      totalHours,\n      tasks\n    };\n    \n    // Validate form\n    const validation = validateCompleteForm(formData);\n    if (!validation.isValid) {\n      setValidationErrors(validation.errors);\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Get current user from auth service\n      const currentUser = authService.getUser();\n      const employeeId = currentUser?.id || '1'; // Fallback to '1' if no user is logged in\n      \n      // Transform form data to API format\n      const taskLogData = transformFormToTaskLog(formData, employeeId, DUMMY_PROJECTS);\n      \n      // Submit to API\n      await timesheetService.createTaskLog(taskLogData);\n      \n      // Success handling\n      setSubmitSuccess(true);\n      setTimeout(() => {\n        setSubmitSuccess(false);\n        resetForm();\n      }, 3000);\n      \n    } catch (error) {\n      console.error('Failed to submit time logs:', error);\n      setSubmitError(error instanceof Error ? error.message : 'Failed to save time logs. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <DashboardLayout title=\"Log Task\" subtitle=\"Track your daily work hours\">\n      <div className=\"space-y-excel-xl\">\n        {/* Tabs */}\n        <div className=\"border-b border-excel-border\">\n          <nav className=\"-mb-px flex space-x-excel-xl\">\n            <button\n              onClick={() => setActiveTab('log')}\n              className={cn(\n                'py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150',\n                activeTab === 'log'\n                  ? 'border-excel-blue-500 text-excel-blue-500'\n                  : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'\n              )}\n            >\n              Log your task\n            </button>\n            <button\n              onClick={() => setActiveTab('view')}\n              className={cn(\n                'py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150',\n                activeTab === 'view'\n                  ? 'border-excel-blue-500 text-excel-blue-500'\n                  : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'\n              )}\n            >\n              View Logs\n            </button>\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === 'log' && (\n          <div className=\"bg-white border border-excel-border rounded-excel p-excel-xl\">\n            {/* Current User Info */}\n            {isAuthenticated && currentUser ? (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-excel p-excel-md mb-excel-xl\">\n                <div className=\"flex items-center space-x-excel-md\">\n                  <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-excel-sm font-medium\">\n                    {currentUser.name?.charAt(0)?.toUpperCase() || 'U'}\n                  </div>\n                  <div>\n                    <div className=\"text-excel-sm font-medium text-blue-900\">\n                      Logging time for: {currentUser.name || 'Unknown User'}\n                    </div>\n                    <div className=\"text-excel-xs text-blue-700\">\n                      {currentUser.email} • {currentUser.role || 'No role'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-excel p-excel-md mb-excel-xl\">\n                <div className=\"flex items-center space-x-excel-md\">\n                  <AlertCircle className=\"w-5 h-5 text-yellow-600\" />\n                  <div>\n                    <div className=\"text-excel-sm font-medium text-yellow-900\">\n                      Not authenticated\n                    </div>\n                    <div className=\"text-excel-xs text-yellow-700\">\n                      Time logs will be saved with a default user ID. Please log in for proper user tracking.\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <form onSubmit={handleSubmit} className=\"space-y-excel-xl\">\n              {/* Success Message */}\n              {submitSuccess && (\n                <div className=\"bg-green-50 border border-green-200 rounded-excel p-excel-md flex items-center space-x-excel-md\">\n                  <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                  <span className=\"text-green-800 text-excel-sm font-medium\">\n                    Time logs saved successfully! Form will reset in a moment.\n                  </span>\n                </div>\n              )}\n\n              {/* Error Messages */}\n              {(submitError || validationErrors.length > 0) && (\n                <div className=\"bg-red-50 border border-red-200 rounded-excel p-excel-md\">\n                  <div className=\"flex items-start space-x-excel-md\">\n                    <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5\" />\n                    <div className=\"flex-1\">\n                      <h4 className=\"text-red-800 text-excel-sm font-medium mb-excel-sm\">\n                        Please fix the following errors:\n                      </h4>\n                      <ul className=\"text-red-700 text-excel-sm space-y-excel-xs\">\n                        {submitError && <li>• {submitError}</li>}\n                        {validationErrors.map((error, index) => (\n                          <li key={index}>• {error}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Date and Total Hours Row */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-excel-xl\">\n                <Calendar\n                  label=\"Select Date\"\n                  value={selectedDate}\n                  onChange={setSelectedDate}\n                />\n                <div className=\"space-y-excel-sm\">\n                  <Input\n                    label=\"Total Hours\"\n                    type=\"number\"\n                    step=\"0.5\"\n                    min=\"0\"\n                    max=\"24\"\n                    placeholder=\"Enter total hours worked\"\n                    value={totalHours}\n                    onChange={(e) => {\n                      setTotalHours(e.target.value);\n                      // Clear validation errors when user starts typing\n                      if (validationErrors.length > 0) {\n                        setValidationErrors([]);\n                      }\n                    }}\n                  />\n                  {/* Real-time hours validation indicator */}\n                  {(() => {\n                    const validation = getHoursValidationStatus();\n                    if (!validation) return null;\n                    \n                    return (\n                      <div className={cn(\n                        \"text-excel-xs px-excel-sm py-excel-xs rounded-excel flex items-center space-x-excel-xs\",\n                        validation.isValid \n                          ? \"bg-green-50 text-green-700\" \n                          : \"bg-yellow-50 text-yellow-700\"\n                      )}>\n                        {validation.isValid ? (\n                          <>\n                            <CheckCircle className=\"w-3 h-3\" />\n                            <span>Hours match (Total: {validation.total}, Tasks: {validation.taskSum})</span>\n                          </>\n                        ) : (\n                          <>\n                            <AlertCircle className=\"w-3 h-3\" />\n                            <span>\n                              Hours mismatch (Total: {validation.total}, Tasks: {validation.taskSum}, \n                              Difference: {validation.difference.toFixed(2)})\n                            </span>\n                          </>\n                        )}\n                      </div>\n                    );\n                  })()}\n                </div>\n              </div>\n\n              {/* Task Entries */}\n              <div className=\"space-y-excel-lg\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-excel-lg font-semibold text-excel-text-primary\">\n                    Tasks\n                  </h3>\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    leftIcon={<Plus className=\"w-4 h-4\" />}\n                    onClick={addTask}\n                  >\n                    Add Task\n                  </Button>\n                </div>\n\n                <div className=\"space-y-excel-lg\">\n                  {tasks.map((task, index) => (\n                    <div\n                      key={task.id}\n                      className=\"border border-excel-border rounded-excel p-excel-lg bg-excel-gray-50\"\n                    >\n                      <div className=\"flex items-center justify-between mb-excel-md\">\n                        <h4 className=\"text-excel-sm font-medium text-excel-text-primary\">\n                          Task {index + 1}\n                        </h4>\n                        {tasks.length > 1 && (\n                          <Button\n                            type=\"button\"\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => removeTask(task.id)}\n                            className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        )}\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-excel-lg\">\n                        <div>\n                          <Select\n                            label=\"Project\"\n                            options={projectOptions}\n                            placeholder=\"Select project...\"\n                            value={task.projectId}\n                            onChange={(e) => updateTask(task.id, 'projectId', e.target.value)}\n                          />\n                          {!task.projectId && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Project')) && (\n                            <div className=\"text-red-600 text-excel-xs mt-excel-xs\">Project is required</div>\n                          )}\n                        </div>\n\n                        <div>\n                          <Input\n                            label=\"Description\"\n                            placeholder=\"Enter task description...\"\n                            value={task.description}\n                            onChange={(e) => updateTask(task.id, 'description', e.target.value)}\n                          />\n                          {!task.description.trim() && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Description')) && (\n                            <div className=\"text-red-600 text-excel-xs mt-excel-xs\">Description is required</div>\n                          )}\n                        </div>\n\n                        <div>\n                          <Input\n                            label=\"Hours\"\n                            type=\"number\"\n                            step=\"0.5\"\n                            min=\"0\"\n                            max=\"24\"\n                            placeholder=\"Hours\"\n                            value={task.hours}\n                            onChange={(e) => updateTask(task.id, 'hours', e.target.value)}\n                          />\n                          {(() => {\n                            const hours = parseFloat(task.hours);\n                            const hasHoursError = validationErrors.some(error => \n                              error.includes(`Task ${index + 1}`) && error.includes('Hours')\n                            );\n                            if (hasHoursError) {\n                              return <div className=\"text-red-600 text-excel-xs mt-excel-xs\">Valid hours required</div>;\n                            }\n                            return null;\n                          })()}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Submit Button */}\n              <div className=\"flex justify-end space-x-excel-md\">\n                <Button \n                  type=\"button\" \n                  variant=\"outline\"\n                  onClick={resetForm}\n                  disabled={isSubmitting}\n                >\n                  Reset Form\n                </Button>\n                <Button \n                  type=\"submit\" \n                  variant=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? 'Saving...' : 'Log Tasks'}\n                </Button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        {activeTab === 'view' && (\n          <div className=\"h-[calc(100vh-200px)]\">\n            <ViewLogs />\n          </div>\n        )}\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default LogTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}