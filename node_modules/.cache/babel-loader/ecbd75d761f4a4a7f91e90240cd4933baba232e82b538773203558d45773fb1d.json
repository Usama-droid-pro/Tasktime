{"ast":null,"code":"var _jsxFileName = \"/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/components/ViewLogs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { cn } from '../utils/helpers';\nimport { DUMMY_PROJECTS } from '../constants/dummyData';\nimport { timesheetService, userService } from '../services';\nimport { Loader2, AlertCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewLogs = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const preSelectedUserId = searchParams.get('user');\n  const preSelectedUserName = searchParams.get('name');\n  const [selectedUserId, setSelectedUserId] = useState(preSelectedUserId || '');\n\n  // Date range state - default to current month\n  const getCurrentMonthRange = () => {\n    const now = new Date();\n    const firstDay = new Date(now.getFullYear(), now.getMonth(), 1);\n    return {\n      startDate: firstDay.toISOString().split('T')[0],\n      endDate: now.toISOString().split('T')[0]\n    };\n  };\n  const [dateRange, setDateRange] = useState(getCurrentMonthRange());\n\n  // API state management\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Users state\n  const [apiUsers, setApiUsers] = useState([]);\n  const [usersLoading, setUsersLoading] = useState(false);\n  const [usersError, setUsersError] = useState(null);\n\n  // Fetch users from API (always try to fetch users regardless of data source mode)\n  const fetchUsers = async () => {\n    setUsersLoading(true);\n    setUsersError(null);\n    try {\n      const response = await userService.getUsers();\n      setApiUsers(response.data.users);\n      console.log('Successfully fetched users from API:', response.data.users.length);\n    } catch (err) {\n      console.error('Failed to fetch users:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to fetch users';\n      setUsersError(errorMessage);\n\n      // If users API fails, fall back to dummy data\n      if (errorMessage.includes('not found') || errorMessage.includes('404') || errorMessage.includes('403')) {\n        console.log('Users API not available, using dummy data for user list');\n      }\n      setApiUsers([]); // Clear any existing API users\n    } finally {\n      setUsersLoading(false);\n    }\n  };\n\n  // Get all unique user IDs from sample data\n  const allUserIds = Array.from(new Set(SAMPLE_LOG_DATA.map(log => log.userId)));\n\n  // Get all user IDs from DUMMY_USERS (including those without logs)\n  const allUserIdsFromDummy = DUMMY_USERS.map(user => parseInt(user.id));\n\n  // Get users list - always prefer API users if available\n  const getUsersList = () => {\n    if (apiUsers.length > 0) {\n      return apiUsers;\n    }\n    // Fallback to dummy users only if API users are not available\n    return DUMMY_USERS.map(user => ({\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      role: user.role,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }));\n  };\n\n  // Helper function to get user name from ID\n  const getUserNameById = userId => {\n    const users = getUsersList();\n    const userData = users.find(u => u.id === userId.toString());\n    return (userData === null || userData === void 0 ? void 0 : userData.name) || `User ${userId}`;\n  };\n\n  // Get user IDs for tabs - always prefer API users if available\n  const getUserIdsForTabs = () => {\n    if (apiUsers.length > 0) {\n      return apiUsers.map(user => user.id);\n    }\n    return allUserIdsFromDummy.map(id => id.toString());\n  };\n\n  // State for processed API logs\n  const [apiProcessedLogs, setApiProcessedLogs] = useState([]);\n\n  // Fetch task logs from API\n  const fetchTimeLogs = async (employeeId, startDate, endDate) => {\n    if (!useRealData) return; // Skip if using dummy data\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const processedLogs = await processApiTaskLogs(employeeId, startDate, endDate);\n      setApiProcessedLogs(processedLogs);\n      setApiAvailable(true);\n    } catch (err) {\n      console.error('Failed to fetch task logs:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to fetch task logs';\n\n      // Check if it's a 404 error (API endpoint not found)\n      if (errorMessage.includes('not found') || errorMessage.includes('404')) {\n        setError('API endpoint not available. Using demo data instead.');\n        setApiAvailable(false);\n        // Automatically switch to demo data\n        setUseRealData(false);\n      } else {\n        setError(errorMessage);\n        setApiAvailable(false);\n      }\n      setApiProcessedLogs([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch users on component mount (always try to get users from API)\n  useEffect(() => {\n    fetchUsers();\n  }, []); // Only run once on mount\n\n  // Auto-switch to API data mode when users are successfully loaded\n  useEffect(() => {\n    if (apiUsers.length > 0 && !useRealData) {\n      console.log('API users loaded, switching to API data mode');\n      setUseRealData(true);\n    }\n  }, [apiUsers, useRealData]);\n\n  // Set default to first user on component mount (only if no pre-selected user)\n  React.useEffect(() => {\n    const userIds = getUserIdsForTabs();\n    if (userIds.length > 0 && !selectedUserId && !preSelectedUserId) {\n      setSelectedUserId(userIds[0]);\n    }\n  }, [selectedUserId, preSelectedUserId, apiUsers]); // Removed useRealData dependency\n\n  // Debounced fetch to prevent excessive API calls\n  useEffect(() => {\n    if (!selectedUserId || !useRealData) return;\n    const timeoutId = setTimeout(() => {\n      fetchTimeLogs(selectedUserId, dateRange.startDate, dateRange.endDate);\n    }, 300); // 300ms debounce\n\n    return () => clearTimeout(timeoutId);\n  }, [selectedUserId, dateRange, useRealData]);\n\n  // Handle employee change with proper state management\n  const handleEmployeeChange = newEmployeeId => {\n    const stringId = newEmployeeId.toString();\n    console.log('Switching to employee ID:', stringId);\n    setSelectedUserId(stringId);\n    setError(null); // Clear any previous errors\n\n    // If using real data, the useEffect above will trigger the fetch\n    // If using dummy data, the component will re-render with filtered data\n  };\n\n  // Validate date range\n  const isValidDateRange = () => {\n    if (!dateRange.startDate || !dateRange.endDate) return true; // Allow empty dates\n    return new Date(dateRange.startDate) <= new Date(dateRange.endDate);\n  };\n\n  // Filter dummy data by date range when not using real API\n  const getFilteredDummyData = () => {\n    if (useRealData) return filteredLogData;\n    return filteredLogData.filter(log => {\n      const logDate = new Date(log.date);\n      const startDate = dateRange.startDate ? new Date(dateRange.startDate) : null;\n      const endDate = dateRange.endDate ? new Date(dateRange.endDate) : null;\n      if (startDate && logDate < startDate) return false;\n      if (endDate && logDate > endDate) return false;\n      return true;\n    });\n  };\n\n  // Debug logging for pre-selected user\n  React.useEffect(() => {\n    if (preSelectedUserId) {\n      console.log('Pre-selected user ID:', preSelectedUserId);\n      console.log('Pre-selected user name:', preSelectedUserName);\n      console.log('Available user IDs in sample data:', allUserIds);\n      console.log('Selected user ID:', selectedUserId);\n    }\n  }, [preSelectedUserId, preSelectedUserName, allUserIds, selectedUserId]);\n\n  // Debug when selectedUserId changes\n  React.useEffect(() => {\n    console.log('selectedUserId changed to:', selectedUserId);\n  }, [selectedUserId]);\n\n  // Process real API task logs into display format\n  const processApiTaskLogs = async (employeeId, startDate, endDate) => {\n    try {\n      const response = await timesheetService.getTaskLogsByEmployee(employeeId, startDate, endDate);\n      return response.data.taskLogs.map(taskLog => {\n        const projectHours = {};\n        const descriptions = [];\n\n        // Initialize all projects with 0 hours\n        projectNames.forEach(projectName => {\n          projectHours[projectName] = 0;\n        });\n\n        // Process tasks from the task log\n        taskLog.tasks.forEach(task => {\n          if (!projectHours[task.project_name]) {\n            projectHours[task.project_name] = 0;\n          }\n          projectHours[task.project_name] += task.hours;\n          if (task.description) {\n            descriptions.push(task.description);\n          }\n        });\n        const sumOfProjectHours = Object.values(projectHours).reduce((sum, hours) => sum + hours, 0);\n        const hasValidationError = Math.abs(taskLog.totalHours - sumOfProjectHours) > 0.01;\n        return {\n          id: taskLog.id,\n          date: taskLog.date,\n          totalHours: taskLog.totalHours,\n          projectHours,\n          descriptions,\n          hasValidationError,\n          originalLogs: [] // We don't need to convert to TimeLog format for display\n        };\n      }).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    } catch (error) {\n      console.error('Failed to process task logs:', error);\n      return [];\n    }\n  };\n\n  // Filter data by selected user ID only\n  const filteredLogData = selectedUserId ? SAMPLE_LOG_DATA.filter(log => log.userId === parseInt(selectedUserId)) : SAMPLE_LOG_DATA;\n\n  // Debug logging\n  console.log('Selected User ID:', selectedUserId);\n  console.log('All User IDs:', allUserIds);\n  console.log('Filtered Data Count:', filteredLogData.length);\n  console.log('Sample Data Count:', SAMPLE_LOG_DATA.length);\n\n  // Get all unique project names from both DUMMY_PROJECTS and SAMPLE_LOG_DATA\n  const dummyProjectNames = DUMMY_PROJECTS.map(project => project.name);\n  const sampleProjectNames = Array.from(new Set(SAMPLE_LOG_DATA.flatMap(log => log.tasks.map(task => task.projectName))));\n  const projectNames = Array.from(new Set([...dummyProjectNames, ...sampleProjectNames]));\n\n  // Process log data to aggregate by project\n  const processedLogs = useRealData ? apiProcessedLogs : getFilteredDummyData().map(log => {\n    const projectHours = {};\n    const descriptions = [];\n\n    // Initialize all projects with 0 hours\n    projectNames.forEach(projectName => {\n      projectHours[projectName] = 0;\n    });\n\n    // Aggregate hours by project and collect descriptions\n    log.tasks.forEach(task => {\n      if (projectHours.hasOwnProperty(task.projectName)) {\n        projectHours[task.projectName] += task.hours;\n      }\n      descriptions.push(task.description);\n    });\n\n    // Calculate sum of all project hours\n    const sumOfProjectHours = Object.values(projectHours).reduce((sum, hours) => sum + hours, 0);\n\n    // Check if total hours doesn't match sum of project hours\n    const hasValidationError = Math.abs(log.totalHours - sumOfProjectHours) > 0.01;\n    return {\n      id: log.id,\n      date: log.date,\n      totalHours: log.totalHours,\n      projectHours,\n      descriptions,\n      hasValidationError,\n      originalLogs: [] // No original logs for dummy data\n    };\n  });\n  console.log('Processed logs for user', selectedUserId, ':', processedLogs);\n\n  // Generate column headers (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z)\n  const columnHeaders = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  const totalColumns = 3 + projectNames.length; // Date, Total Hours, What Accomplished + Projects\n  const usedColumns = columnHeaders.slice(0, totalColumns);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border border-excel-border rounded-t-excel p-excel-md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-excel-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-excel-lg font-semibold text-black\",\n            children: [\"Viewing logs for: \", preSelectedUserName || getUserNameById(selectedUserId)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setUseRealData(!useRealData),\n            className: cn(\"px-excel-sm py-excel-xs text-excel-xs rounded-excel border transition-colors\", useRealData ? \"bg-blue-50 text-blue-700 border-blue-200\" : \"bg-gray-50 text-gray-700 border-gray-200\"),\n            title: useRealData ? \"Switch to demo data for logs (users always from API when available)\" : \"Switch to real API data for logs (users always from API when available)\",\n            children: useRealData ? \"API Data\" : \"Demo Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), apiAvailable === false && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-excel-xs text-orange-600 bg-orange-50 px-excel-xs py-excel-xs rounded\",\n            children: \"API not available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), apiUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-excel-xs text-green-600 bg-green-50 px-excel-xs py-excel-xs rounded\",\n            children: [apiUsers.length, \" API users\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), apiUsers.length === 0 && !usersLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-excel-xs text-orange-600 bg-orange-50 px-excel-xs py-excel-xs rounded\",\n            children: \"Using demo users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-excel-md\",\n          children: [(isLoading || usersLoading) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-xs text-excel-sm text-excel-text-muted\",\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"w-4 h-4 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: usersLoading ? 'Loading users...' : 'Loading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), (error || usersError) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-xs text-excel-sm text-red-600\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Error loading data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-excel-sm text-excel-text-muted\",\n            children: [useRealData ? apiProcessedLogs.length : getFilteredDummyData().length, \" entries\", !isValidDateRange() && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-600 ml-excel-xs\",\n              children: \"(Invalid date range)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: dateRange.startDate,\n              onChange: e => {\n                const newStartDate = e.target.value;\n                setDateRange(prev => ({\n                  ...prev,\n                  startDate: newStartDate\n                }));\n                setError(null); // Clear errors when changing filters\n              },\n              className: \"px-excel-sm py-excel-xs text-excel-xs border border-excel-border rounded-excel bg-white\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-excel-xs text-excel-text-muted\",\n              children: \"to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: dateRange.endDate,\n              onChange: e => {\n                const newEndDate = e.target.value;\n                setDateRange(prev => ({\n                  ...prev,\n                  endDate: newEndDate\n                }));\n                setError(null); // Clear errors when changing filters\n              },\n              className: \"px-excel-sm py-excel-xs text-excel-xs border border-excel-border rounded-excel bg-white\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setDateRange(getCurrentMonthRange());\n                setError(null); // Clear errors when resetting\n              },\n              className: \"px-excel-sm py-excel-xs text-excel-xs bg-white border border-excel-border rounded-excel hover:bg-excel-hover transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n              title: \"Current Month\",\n              disabled: isLoading,\n              children: \"\\uD83D\\uDCC5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border-l border-r border-b border-excel-border rounded-b-excel overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full border-collapse\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-excel-gray-100 border-b border-excel-border\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"w-12 h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 15\n                }, this), usedColumns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: cn('h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center', index === 0 && 'w-32',\n                  // Date column\n                  index === 1 && 'w-24',\n                  // Total Hours column\n                  index === 2 && 'w-80',\n                  // What Accomplished column\n                  index > 2 && 'w-32' // Project columns\n                  ),\n                  children: col\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 17\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-excel-header border-b border-excel-border\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-left\",\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\",\n                  children: \"Total Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-left\",\n                  children: \"What Accomplished\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 15\n                }, this), projectNames.map(projectName => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\",\n                  children: projectName\n                }, projectName, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 17\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: isLoading ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: totalColumns + 1,\n                  className: \"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-excel-text-muted bg-excel-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-center space-x-excel-md\",\n                    children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                      className: \"w-4 h-4 animate-spin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Loading time logs...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 15\n              }, this) : error ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: totalColumns + 1,\n                  className: \"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-red-600 bg-red-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-center space-x-excel-md\",\n                    children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: error\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => fetchTimeLogs(selectedUserId, dateRange.startDate, dateRange.endDate),\n                      className: \"text-blue-600 hover:text-blue-700 underline\",\n                      children: \"Retry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 15\n              }, this) : processedLogs.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: totalColumns + 1,\n                  className: \"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-excel-text-muted bg-excel-gray-50\",\n                  children: selectedUserId && useRealData ? `No logs available for ${getUserNameById(selectedUserId)}. This user may not have logged any tasks yet.` : selectedUserId && !allUserIds.includes(parseInt(selectedUserId)) ? `No logs available for ${getUserNameById(selectedUserId)}. This user may not have logged any tasks yet.` : 'No logs found for the selected criteria.'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 15\n              }, this) : processedLogs.map((log, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: cn(\"border-b border-excel-border\", log.hasValidationError ? \"bg-red-50 hover:bg-red-100\" : \"hover:bg-excel-hover\"),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: cn(\"w-4 h-4 border-r border-excel-border text-excel-xs font-medium text-center\", log.hasValidationError ? \"bg-red-100 text-red-600\" : \"bg-excel-gray-200 text-excel-text-muted\"),\n                  children: rowIndex + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: cn(\"h-8 px-excel-md py-excel-sm border-r border-excel-border text-excel-sm\", log.hasValidationError ? \"bg-red-50 text-red-800\" : \"bg-white text-excel-text-primary\"),\n                  children: new Date(log.date).toLocaleDateString('en-US', {\n                    month: 'short',\n                    day: 'numeric',\n                    year: 'numeric'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: cn(\"h-8 px-excel-md py-excel-sm border-r border-excel-border text-excel-sm text-center font-medium\", log.hasValidationError ? \"bg-red-50 text-red-800\" : \"bg-white text-excel-text-primary\"),\n                  children: log.totalHours\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: cn(\"h-auto px-excel-md py-excel-sm border-r border-excel-border text-excel-sm max-w-80\", log.hasValidationError ? \"bg-red-50 text-red-800\" : \"bg-white text-excel-text-primary\"),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"break-words whitespace-normal\",\n                    children: log.descriptions.join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 17\n                }, this), projectNames.map(projectName => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: cn(\"h-8 px-excel-md py-excel-sm border-r border-excel-border text-excel-sm text-center\", log.hasValidationError ? \"bg-red-50 text-red-800\" : \"bg-white text-excel-text-primary\"),\n                  children: log.projectHours[projectName] > 0 ? `${log.projectHours[projectName]} hrs` : '-'\n                }, projectName, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 19\n                }, this))]\n              }, log.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 7\n        }, this), processedLogs.some(log => log.hasValidationError) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-50 border-t border-red-200 p-excel-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-md text-excel-sm text-red-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: \"\\u26A0\\uFE0F Validation Alert:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [processedLogs.filter(log => log.hasValidationError).length, \" row(s) have total hours that don't match the sum of project hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-excel-gray-100 border-t border-excel-border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex overflow-x-auto\",\n        children: usersLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-excel-lg py-excel-sm text-excel-sm text-excel-text-muted flex items-center space-x-excel-sm\",\n          children: [/*#__PURE__*/_jsxDEV(Loader2, {\n            className: \"w-4 h-4 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading users...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this) : getUserIdsForTabs().map(userId => {\n          const stringUserId = userId.toString();\n          const numericUserId = typeof userId === 'string' ? parseInt(userId) : userId;\n          const hasLogs = apiUsers.length > 0 ? true : allUserIds.includes(numericUserId); // API users might have logs, dummy users check sample data\n          const user = getUsersList().find(u => u.id === stringUserId);\n          const isApiUser = apiUsers.length > 0;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEmployeeChange(userId),\n            className: cn('px-excel-lg py-excel-sm text-excel-sm font-medium border-r border-excel-border whitespace-nowrap transition-colors duration-150', selectedUserId === stringUserId ? 'bg-white text-excel-blue-600 border-b-2 border-excel-blue-500' : 'bg-excel-gray-100 text-excel-text-primary hover:bg-excel-gray-200', !hasLogs && !isApiUser && 'opacity-60'),\n            title: isApiUser ? `${user === null || user === void 0 ? void 0 : user.name} (${user === null || user === void 0 ? void 0 : user.role}) - From API` : !hasLogs ? 'No logs available for this user' : `${user === null || user === void 0 ? void 0 : user.name} - Demo user`,\n            children: [getUserNameById(userId), (user === null || user === void 0 ? void 0 : user.role) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-excel-xs text-excel-text-muted ml-excel-xs\",\n              children: [\"(\", user.role, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 21\n            }, this), !hasLogs && !isApiUser && ' (No logs)', isApiUser && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-excel-xs text-blue-600 ml-excel-xs\",\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 21\n            }, this)]\n          }, userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this), usersError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-excel-md py-excel-xs bg-yellow-50 border-t border-yellow-200 text-excel-xs text-yellow-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-xs\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-3 h-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Users API unavailable - showing demo users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchUsers,\n            disabled: usersLoading,\n            className: \"text-blue-600 hover:text-blue-700 underline disabled:opacity-50\",\n            children: usersLoading ? 'Retrying...' : 'Retry'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 11\n      }, this), !usersError && apiUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-excel-md py-excel-xs bg-green-50 border-t border-green-200 text-excel-xs text-green-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u2713 \", apiUsers.length, \" users loaded from API\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchUsers,\n            disabled: usersLoading,\n            className: \"text-green-600 hover:text-green-700 underline disabled:opacity-50\",\n            children: usersLoading ? 'Refreshing...' : 'Refresh'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this)]\n  }, selectedUserId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewLogs, \"A1LLALmApW9KZg57m4cENAesezc=\", false, function () {\n  return [useSearchParams];\n});\n_c = ViewLogs;\nexport default ViewLogs;\nvar _c;\n$RefreshReg$(_c, \"ViewLogs\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","cn","DUMMY_PROJECTS","timesheetService","userService","Loader2","AlertCircle","jsxDEV","_jsxDEV","ViewLogs","_s","searchParams","preSelectedUserId","get","preSelectedUserName","selectedUserId","setSelectedUserId","getCurrentMonthRange","now","Date","firstDay","getFullYear","getMonth","startDate","toISOString","split","endDate","dateRange","setDateRange","isLoading","setIsLoading","error","setError","apiUsers","setApiUsers","usersLoading","setUsersLoading","usersError","setUsersError","fetchUsers","response","getUsers","data","users","console","log","length","err","errorMessage","Error","message","includes","allUserIds","Array","from","Set","SAMPLE_LOG_DATA","map","userId","allUserIdsFromDummy","DUMMY_USERS","user","parseInt","id","getUsersList","name","email","role","createdAt","updatedAt","getUserNameById","userData","find","u","toString","getUserIdsForTabs","apiProcessedLogs","setApiProcessedLogs","fetchTimeLogs","employeeId","useRealData","processedLogs","processApiTaskLogs","setApiAvailable","setUseRealData","userIds","timeoutId","setTimeout","clearTimeout","handleEmployeeChange","newEmployeeId","stringId","isValidDateRange","getFilteredDummyData","filteredLogData","filter","logDate","date","getTaskLogsByEmployee","taskLogs","taskLog","projectHours","descriptions","projectNames","forEach","projectName","tasks","task","project_name","hours","description","push","sumOfProjectHours","Object","values","reduce","sum","hasValidationError","Math","abs","totalHours","originalLogs","sort","a","b","getTime","dummyProjectNames","project","sampleProjectNames","flatMap","hasOwnProperty","columnHeaders","totalColumns","usedColumns","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","apiAvailable","type","value","onChange","e","newStartDate","target","prev","disabled","newEndDate","col","index","colSpan","rowIndex","toLocaleDateString","month","day","year","join","some","stringUserId","numericUserId","hasLogs","isApiUser","_c","$RefreshReg$"],"sources":["/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/components/ViewLogs.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { cn } from '../utils/helpers';\nimport { DUMMY_PROJECTS } from '../constants/dummyData';\nimport { timesheetService, userService } from '../services';\nimport { User } from '../services/users/users.service';\nimport { Loader2, AlertCircle } from 'lucide-react';\n\ninterface ProcessedTimeLog {\n  id?: string;\n  date: string;\n  totalHours: number;\n  projectHours: Record<string, number>;\n  descriptions: string[];\n  hasValidationError: boolean;\n  originalLogs: any[]; // Can be empty for processed logs\n}\n\nconst ViewLogs: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const preSelectedUserId = searchParams.get('user');\n  const preSelectedUserName = searchParams.get('name');\n  \n  const [selectedUserId, setSelectedUserId] = useState<string>(\n    preSelectedUserId || ''\n  );\n  \n  // Date range state - default to current month\n  const getCurrentMonthRange = () => {\n    const now = new Date();\n    const firstDay = new Date(now.getFullYear(), now.getMonth(), 1);\n    return {\n      startDate: firstDay.toISOString().split('T')[0],\n      endDate: now.toISOString().split('T')[0]\n    };\n  };\n  \n  const [dateRange, setDateRange] = useState(getCurrentMonthRange());\n  \n  // API state management\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Users state\n  const [apiUsers, setApiUsers] = useState<User[]>([]);\n  const [usersLoading, setUsersLoading] = useState(false);\n  const [usersError, setUsersError] = useState<string | null>(null);\n  \n  // Fetch users from API (always try to fetch users regardless of data source mode)\n  const fetchUsers = async () => {\n    setUsersLoading(true);\n    setUsersError(null);\n    \n    try {\n      const response = await userService.getUsers();\n      setApiUsers(response.data.users);\n      console.log('Successfully fetched users from API:', response.data.users.length);\n    } catch (err) {\n      console.error('Failed to fetch users:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to fetch users';\n      setUsersError(errorMessage);\n      \n      // If users API fails, fall back to dummy data\n      if (errorMessage.includes('not found') || errorMessage.includes('404') || errorMessage.includes('403')) {\n        console.log('Users API not available, using dummy data for user list');\n      }\n      setApiUsers([]); // Clear any existing API users\n    } finally {\n      setUsersLoading(false);\n    }\n  };\n\n  // Get all unique user IDs from sample data\n  const allUserIds = Array.from(new Set(SAMPLE_LOG_DATA.map(log => log.userId)));\n  \n  // Get all user IDs from DUMMY_USERS (including those without logs)\n  const allUserIdsFromDummy = DUMMY_USERS.map(user => parseInt(user.id));\n  \n  // Get users list - always prefer API users if available\n  const getUsersList = () => {\n    if (apiUsers.length > 0) {\n      return apiUsers;\n    }\n    // Fallback to dummy users only if API users are not available\n    return DUMMY_USERS.map(user => ({\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      role: user.role as User['role'],\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }));\n  };\n  \n  // Helper function to get user name from ID\n  const getUserNameById = (userId: number | string) => {\n    const users = getUsersList();\n    const userData = users.find(u => u.id === userId.toString());\n    return userData?.name || `User ${userId}`;\n  };\n\n  // Get user IDs for tabs - always prefer API users if available\n  const getUserIdsForTabs = () => {\n    if (apiUsers.length > 0) {\n      return apiUsers.map(user => user.id);\n    }\n    return allUserIdsFromDummy.map(id => id.toString());\n  };\n  \n  // State for processed API logs\n  const [apiProcessedLogs, setApiProcessedLogs] = useState<ProcessedTimeLog[]>([]);\n\n  // Fetch task logs from API\n  const fetchTimeLogs = async (employeeId: string, startDate?: string, endDate?: string) => {\n    if (!useRealData) return; // Skip if using dummy data\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const processedLogs = await processApiTaskLogs(employeeId, startDate, endDate);\n      setApiProcessedLogs(processedLogs);\n      setApiAvailable(true);\n    } catch (err) {\n      console.error('Failed to fetch task logs:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to fetch task logs';\n      \n      // Check if it's a 404 error (API endpoint not found)\n      if (errorMessage.includes('not found') || errorMessage.includes('404')) {\n        setError('API endpoint not available. Using demo data instead.');\n        setApiAvailable(false);\n        // Automatically switch to demo data\n        setUseRealData(false);\n      } else {\n        setError(errorMessage);\n        setApiAvailable(false);\n      }\n      setApiProcessedLogs([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Fetch users on component mount (always try to get users from API)\n  useEffect(() => {\n    fetchUsers();\n  }, []); // Only run once on mount\n\n  // Auto-switch to API data mode when users are successfully loaded\n  useEffect(() => {\n    if (apiUsers.length > 0 && !useRealData) {\n      console.log('API users loaded, switching to API data mode');\n      setUseRealData(true);\n    }\n  }, [apiUsers, useRealData]);\n\n  // Set default to first user on component mount (only if no pre-selected user)\n  React.useEffect(() => {\n    const userIds = getUserIdsForTabs();\n    if (userIds.length > 0 && !selectedUserId && !preSelectedUserId) {\n      setSelectedUserId(userIds[0]);\n    }\n  }, [selectedUserId, preSelectedUserId, apiUsers]); // Removed useRealData dependency\n\n  // Debounced fetch to prevent excessive API calls\n  useEffect(() => {\n    if (!selectedUserId || !useRealData) return;\n    \n    const timeoutId = setTimeout(() => {\n      fetchTimeLogs(selectedUserId, dateRange.startDate, dateRange.endDate);\n    }, 300); // 300ms debounce\n    \n    return () => clearTimeout(timeoutId);\n  }, [selectedUserId, dateRange, useRealData]);\n\n  // Handle employee change with proper state management\n  const handleEmployeeChange = (newEmployeeId: number | string) => {\n    const stringId = newEmployeeId.toString();\n    console.log('Switching to employee ID:', stringId);\n    setSelectedUserId(stringId);\n    setError(null); // Clear any previous errors\n    \n    // If using real data, the useEffect above will trigger the fetch\n    // If using dummy data, the component will re-render with filtered data\n  };\n\n  // Validate date range\n  const isValidDateRange = () => {\n    if (!dateRange.startDate || !dateRange.endDate) return true; // Allow empty dates\n    return new Date(dateRange.startDate) <= new Date(dateRange.endDate);\n  };\n\n  // Filter dummy data by date range when not using real API\n  const getFilteredDummyData = () => {\n    if (useRealData) return filteredLogData;\n    \n    return filteredLogData.filter(log => {\n      const logDate = new Date(log.date);\n      const startDate = dateRange.startDate ? new Date(dateRange.startDate) : null;\n      const endDate = dateRange.endDate ? new Date(dateRange.endDate) : null;\n      \n      if (startDate && logDate < startDate) return false;\n      if (endDate && logDate > endDate) return false;\n      \n      return true;\n    });\n  };\n  \n  // Debug logging for pre-selected user\n  React.useEffect(() => {\n    if (preSelectedUserId) {\n      console.log('Pre-selected user ID:', preSelectedUserId);\n      console.log('Pre-selected user name:', preSelectedUserName);\n      console.log('Available user IDs in sample data:', allUserIds);\n      console.log('Selected user ID:', selectedUserId);\n    }\n  }, [preSelectedUserId, preSelectedUserName, allUserIds, selectedUserId]);\n  \n  // Debug when selectedUserId changes\n  React.useEffect(() => {\n    console.log('selectedUserId changed to:', selectedUserId);\n  }, [selectedUserId]);\n  \n  // Process real API task logs into display format\n  const processApiTaskLogs = async (employeeId: string, startDate?: string, endDate?: string): Promise<ProcessedTimeLog[]> => {\n    try {\n      const response = await timesheetService.getTaskLogsByEmployee(employeeId, startDate, endDate);\n      \n      return response.data.taskLogs.map(taskLog => {\n        const projectHours: Record<string, number> = {};\n        const descriptions: string[] = [];\n        \n        // Initialize all projects with 0 hours\n        projectNames.forEach(projectName => {\n          projectHours[projectName] = 0;\n        });\n\n        // Process tasks from the task log\n        taskLog.tasks.forEach(task => {\n          if (!projectHours[task.project_name]) {\n            projectHours[task.project_name] = 0;\n          }\n          projectHours[task.project_name] += task.hours;\n          if (task.description) {\n            descriptions.push(task.description);\n          }\n        });\n\n        const sumOfProjectHours = Object.values(projectHours).reduce((sum, hours) => sum + hours, 0);\n        const hasValidationError = Math.abs(taskLog.totalHours - sumOfProjectHours) > 0.01;\n\n        return {\n          id: taskLog.id,\n          date: taskLog.date,\n          totalHours: taskLog.totalHours,\n          projectHours,\n          descriptions,\n          hasValidationError,\n          originalLogs: [] // We don't need to convert to TimeLog format for display\n        };\n      }).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    } catch (error) {\n      console.error('Failed to process task logs:', error);\n      return [];\n    }\n  };\n\n  // Filter data by selected user ID only\n  const filteredLogData = selectedUserId \n    ? SAMPLE_LOG_DATA.filter(log => log.userId === parseInt(selectedUserId))\n    : SAMPLE_LOG_DATA;\n  \n  // Debug logging\n  console.log('Selected User ID:', selectedUserId);\n  console.log('All User IDs:', allUserIds);\n  console.log('Filtered Data Count:', filteredLogData.length);\n  console.log('Sample Data Count:', SAMPLE_LOG_DATA.length);\n  \n  // Get all unique project names from both DUMMY_PROJECTS and SAMPLE_LOG_DATA\n  const dummyProjectNames = DUMMY_PROJECTS.map(project => project.name);\n  const sampleProjectNames = Array.from(new Set(\n    SAMPLE_LOG_DATA.flatMap(log => log.tasks.map(task => task.projectName))\n  ));\n  const projectNames = Array.from(new Set([...dummyProjectNames, ...sampleProjectNames]));\n  \n  // Process log data to aggregate by project\n  const processedLogs = useRealData \n    ? apiProcessedLogs\n    : getFilteredDummyData().map(log => {\n        const projectHours: { [key: string]: number } = {};\n        const descriptions: string[] = [];\n        \n        // Initialize all projects with 0 hours\n        projectNames.forEach(projectName => {\n          projectHours[projectName] = 0;\n        });\n        \n        // Aggregate hours by project and collect descriptions\n        log.tasks.forEach(task => {\n          if (projectHours.hasOwnProperty(task.projectName)) {\n            projectHours[task.projectName] += task.hours;\n          }\n          descriptions.push(task.description);\n        });\n        \n        // Calculate sum of all project hours\n        const sumOfProjectHours = Object.values(projectHours).reduce((sum, hours) => sum + hours, 0);\n        \n        // Check if total hours doesn't match sum of project hours\n        const hasValidationError = Math.abs(log.totalHours - sumOfProjectHours) > 0.01;\n        \n        return {\n          id: log.id,\n          date: log.date,\n          totalHours: log.totalHours,\n          projectHours,\n          descriptions,\n          hasValidationError,\n          originalLogs: [] // No original logs for dummy data\n        };\n      });\n  \n  console.log('Processed logs for user', selectedUserId, ':', processedLogs);\n\n  // Generate column headers (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z)\n  const columnHeaders = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  const totalColumns = 3 + projectNames.length; // Date, Total Hours, What Accomplished + Projects\n  const usedColumns = columnHeaders.slice(0, totalColumns);\n\n  return (\n    <div className=\"flex flex-col h-full\" key={selectedUserId}>\n      {/* User Info Header with Date Filter */}\n      <div className=\"bg-white border border-excel-border rounded-t-excel p-excel-md\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-excel-md\">\n            <h3 className=\"text-excel-lg font-semibold text-black\">\n              Viewing logs for: {preSelectedUserName || getUserNameById(selectedUserId)}\n           \n            </h3>\n            {/* Data source toggle */}\n            <button\n              onClick={() => setUseRealData(!useRealData)}\n              className={cn(\n                \"px-excel-sm py-excel-xs text-excel-xs rounded-excel border transition-colors\",\n                useRealData \n                  ? \"bg-blue-50 text-blue-700 border-blue-200\" \n                  : \"bg-gray-50 text-gray-700 border-gray-200\"\n              )}\n              title={useRealData ? \"Switch to demo data for logs (users always from API when available)\" : \"Switch to real API data for logs (users always from API when available)\"}\n            >\n              {useRealData ? \"API Data\" : \"Demo Data\"}\n            </button>\n            {apiAvailable === false && (\n              <span className=\"text-excel-xs text-orange-600 bg-orange-50 px-excel-xs py-excel-xs rounded\">\n                API not available\n              </span>\n            )}\n            {apiUsers.length > 0 && (\n              <span className=\"text-excel-xs text-green-600 bg-green-50 px-excel-xs py-excel-xs rounded\">\n                {apiUsers.length} API users\n              </span>\n            )}\n            {apiUsers.length === 0 && !usersLoading && (\n              <span className=\"text-excel-xs text-orange-600 bg-orange-50 px-excel-xs py-excel-xs rounded\">\n                Using demo users\n              </span>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-excel-md\">\n            {(isLoading || usersLoading) && (\n              <div className=\"flex items-center space-x-excel-xs text-excel-sm text-excel-text-muted\">\n                <Loader2 className=\"w-4 h-4 animate-spin\" />\n                <span>{usersLoading ? 'Loading users...' : 'Loading...'}</span>\n              </div>\n            )}\n            {(error || usersError) && (\n              <div className=\"flex items-center space-x-excel-xs text-excel-sm text-red-600\">\n                <AlertCircle className=\"w-4 h-4\" />\n                <span>Error loading data</span>\n              </div>\n            )}\n            <span className=\"text-excel-sm text-excel-text-muted\">\n              {useRealData ? apiProcessedLogs.length : getFilteredDummyData().length} entries\n              {!isValidDateRange() && (\n                <span className=\"text-red-600 ml-excel-xs\">(Invalid date range)</span>\n              )}\n            </span>\n            <div className=\"flex items-center space-x-excel-sm\">\n              <input\n                type=\"date\"\n                value={dateRange.startDate}\n                onChange={(e) => {\n                  const newStartDate = e.target.value;\n                  setDateRange(prev => ({ ...prev, startDate: newStartDate }));\n                  setError(null); // Clear errors when changing filters\n                }}\n                className=\"px-excel-sm py-excel-xs text-excel-xs border border-excel-border rounded-excel bg-white\"\n                disabled={isLoading}\n              />\n              <span className=\"text-excel-xs text-excel-text-muted\">to</span>\n              <input\n                type=\"date\"\n                value={dateRange.endDate}\n                onChange={(e) => {\n                  const newEndDate = e.target.value;\n                  setDateRange(prev => ({ ...prev, endDate: newEndDate }));\n                  setError(null); // Clear errors when changing filters\n                }}\n                className=\"px-excel-sm py-excel-xs text-excel-xs border border-excel-border rounded-excel bg-white\"\n                disabled={isLoading}\n              />\n              <button\n                onClick={() => {\n                  setDateRange(getCurrentMonthRange());\n                  setError(null); // Clear errors when resetting\n                }}\n                className=\"px-excel-sm py-excel-xs text-excel-xs bg-white border border-excel-border rounded-excel hover:bg-excel-hover transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                title=\"Current Month\"\n                disabled={isLoading}\n              >\n                📅\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Main Table Content */}\n      <div className=\"flex-1 overflow-auto\">\n        <div className=\"bg-white border-l border-r border-b border-excel-border rounded-b-excel overflow-hidden\">\n      {/* Excel-like Table */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full border-collapse\">\n          {/* Column Headers */}\n          <thead>\n            {/* Excel Column Letters Row */}\n            <tr className=\"bg-excel-gray-100 border-b border-excel-border\">\n              <th className=\"w-12 h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"></th>\n              {usedColumns.map((col, index) => (\n                <th\n                  key={col}\n                  className={cn(\n                    'h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center',\n                    index === 0 && 'w-32', // Date column\n                    index === 1 && 'w-24', // Total Hours column\n                    index === 2 && 'w-80', // What Accomplished column\n                    index > 2 && 'w-32' // Project columns\n                  )}\n                >\n                  {col}\n                </th>\n              ))}\n            </tr>\n            {/* Column Names Row */}\n            <tr className=\"bg-excel-header border-b border-excel-border\">\n              <th className=\"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"></th>\n              <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-left\">\n                Date\n              </th>\n              <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\">\n                Total Hours\n              </th>\n              <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-left\">\n                What Accomplished\n              </th>\n              {projectNames.map((projectName) => (\n                <th\n                  key={projectName}\n                  className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\"\n                >\n                  {projectName}\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          {/* Data Rows */}\n          <tbody>\n            {isLoading ? (\n              <tr>\n                <td \n                  colSpan={totalColumns + 1} \n                  className=\"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-excel-text-muted bg-excel-gray-50\"\n                >\n                  <div className=\"flex items-center justify-center space-x-excel-md\">\n                    <Loader2 className=\"w-4 h-4 animate-spin\" />\n                    <span>Loading time logs...</span>\n                  </div>\n                </td>\n              </tr>\n            ) : error ? (\n              <tr>\n                <td \n                  colSpan={totalColumns + 1} \n                  className=\"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-red-600 bg-red-50\"\n                >\n                  <div className=\"flex items-center justify-center space-x-excel-md\">\n                    <AlertCircle className=\"w-4 h-4\" />\n                    <span>{error}</span>\n                    <button\n                      onClick={() => fetchTimeLogs(selectedUserId, dateRange.startDate, dateRange.endDate)}\n                      className=\"text-blue-600 hover:text-blue-700 underline\"\n                    >\n                      Retry\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            ) : processedLogs.length === 0 ? (\n              <tr>\n                <td \n                  colSpan={totalColumns + 1} \n                  className=\"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-excel-text-muted bg-excel-gray-50\"\n                >\n                  {selectedUserId && useRealData\n                    ? `No logs available for ${getUserNameById(selectedUserId)}. This user may not have logged any tasks yet.`\n                    : selectedUserId && !allUserIds.includes(parseInt(selectedUserId)) \n                    ? `No logs available for ${getUserNameById(selectedUserId)}. This user may not have logged any tasks yet.`\n                    : 'No logs found for the selected criteria.'\n                  }\n                </td>\n              </tr>\n            ) : (\n              processedLogs.map((log, rowIndex) => (\n              <tr \n                key={log.id} \n                className={cn(\n                  \"border-b border-excel-border\",\n                  log.hasValidationError \n                    ? \"bg-red-50 hover:bg-red-100\" \n                    : \"hover:bg-excel-hover\"\n                )}\n              >\n                {/* Row Number */}\n                <td className={cn(\n                  \"w-4 h-4 border-r border-excel-border text-excel-xs font-medium text-center\",\n                  log.hasValidationError \n                    ? \"bg-red-100 text-red-600\" \n                    : \"bg-excel-gray-200 text-excel-text-muted\"\n                )}>\n                  {rowIndex + 1}\n                </td>\n                \n                {/* Date */}\n                <td className={cn(\n                  \"h-8 px-excel-md py-excel-sm border-r border-excel-border text-excel-sm\",\n                  log.hasValidationError \n                    ? \"bg-red-50 text-red-800\" \n                    : \"bg-white text-excel-text-primary\"\n                )}>\n                  {new Date(log.date).toLocaleDateString('en-US', { \n                    month: 'short', \n                    day: 'numeric',\n                    year: 'numeric' \n                  })}\n                </td>\n                \n                {/* Total Hours */}\n                <td className={cn(\n                  \"h-8 px-excel-md py-excel-sm border-r border-excel-border text-excel-sm text-center font-medium\",\n                  log.hasValidationError \n                    ? \"bg-red-50 text-red-800\" \n                    : \"bg-white text-excel-text-primary\"\n                )}>\n                  {log.totalHours}\n                </td>\n                \n                {/* What Accomplished */}\n                <td className={cn(\n                  \"h-auto px-excel-md py-excel-sm border-r border-excel-border text-excel-sm max-w-80\",\n                  log.hasValidationError \n                    ? \"bg-red-50 text-red-800\" \n                    : \"bg-white text-excel-text-primary\"\n                )}>\n                  <div className=\"break-words whitespace-normal\">\n                    {log.descriptions.join(', ')}\n                  </div>\n                </td>\n                \n                {/* Project Columns */}\n                {projectNames.map((projectName) => (\n                  <td\n                    key={projectName}\n                    className={cn(\n                      \"h-8 px-excel-md py-excel-sm border-r border-excel-border text-excel-sm text-center\",\n                      log.hasValidationError \n                        ? \"bg-red-50 text-red-800\" \n                        : \"bg-white text-excel-text-primary\"\n                    )}\n                  >\n                    {log.projectHours[projectName] > 0 ? `${log.projectHours[projectName]} hrs` : '-'}\n                  </td>\n                ))}\n              </tr>\n            ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Validation Summary */}\n      {processedLogs.some(log => log.hasValidationError) && (\n        <div className=\"bg-red-50 border-t border-red-200 p-excel-md\">\n          <div className=\"flex items-center space-x-excel-md text-excel-sm text-red-700\">\n            <span className=\"font-medium\">⚠️ Validation Alert:</span>\n            <span>\n              {processedLogs.filter(log => log.hasValidationError).length} row(s) have total hours that don't match the sum of project hours\n            </span>\n          </div>\n        </div>\n      )}\n        </div>\n      </div>\n\n      {/* Bottom User Tabs Navigation (Excel-like) */}\n      <div className=\"bg-excel-gray-100 border-t border-excel-border\">\n        <div className=\"flex overflow-x-auto\">\n          {usersLoading ? (\n            <div className=\"px-excel-lg py-excel-sm text-excel-sm text-excel-text-muted flex items-center space-x-excel-sm\">\n              <Loader2 className=\"w-4 h-4 animate-spin\" />\n              <span>Loading users...</span>\n            </div>\n          ) : (\n            getUserIdsForTabs().map((userId) => {\n              const stringUserId = userId.toString();\n              const numericUserId = typeof userId === 'string' ? parseInt(userId) : userId;\n              const hasLogs = apiUsers.length > 0 ? true : allUserIds.includes(numericUserId); // API users might have logs, dummy users check sample data\n              const user = getUsersList().find(u => u.id === stringUserId);\n              const isApiUser = apiUsers.length > 0;\n              \n              return (\n                <button\n                  key={userId}\n                  onClick={() => handleEmployeeChange(userId)}\n                  className={cn(\n                    'px-excel-lg py-excel-sm text-excel-sm font-medium border-r border-excel-border whitespace-nowrap transition-colors duration-150',\n                    selectedUserId === stringUserId\n                      ? 'bg-white text-excel-blue-600 border-b-2 border-excel-blue-500'\n                      : 'bg-excel-gray-100 text-excel-text-primary hover:bg-excel-gray-200',\n                    !hasLogs && !isApiUser && 'opacity-60'\n                  )}\n                  title={\n                    isApiUser \n                      ? `${user?.name} (${user?.role}) - From API` \n                      : !hasLogs \n                      ? 'No logs available for this user' \n                      : `${user?.name} - Demo user`\n                  }\n                >\n                  {getUserNameById(userId)}\n                  {user?.role && (\n                    <span className=\"text-excel-xs text-excel-text-muted ml-excel-xs\">\n                      ({user.role})\n                    </span>\n                  )}\n                  {!hasLogs && !isApiUser && ' (No logs)'}\n                  {isApiUser && (\n                    <span className=\"text-excel-xs text-blue-600 ml-excel-xs\">•</span>\n                  )}\n                </button>\n              );\n            })\n          )}\n        </div>\n        \n        {/* Users API status indicator */}\n        {usersError && (\n          <div className=\"px-excel-md py-excel-xs bg-yellow-50 border-t border-yellow-200 text-excel-xs text-yellow-700\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-excel-xs\">\n                <AlertCircle className=\"w-3 h-3\" />\n                <span>Users API unavailable - showing demo users</span>\n              </div>\n              <button\n                onClick={fetchUsers}\n                disabled={usersLoading}\n                className=\"text-blue-600 hover:text-blue-700 underline disabled:opacity-50\"\n              >\n                {usersLoading ? 'Retrying...' : 'Retry'}\n              </button>\n            </div>\n          </div>\n        )}\n        {!usersError && apiUsers.length > 0 && (\n          <div className=\"px-excel-md py-excel-xs bg-green-50 border-t border-green-200 text-excel-xs text-green-700\">\n            <div className=\"flex items-center justify-between\">\n              <span>✓ {apiUsers.length} users loaded from API</span>\n              <button\n                onClick={fetchUsers}\n                disabled={usersLoading}\n                className=\"text-green-600 hover:text-green-700 underline disabled:opacity-50\"\n              >\n                {usersLoading ? 'Refreshing...' : 'Refresh'}\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewLogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}