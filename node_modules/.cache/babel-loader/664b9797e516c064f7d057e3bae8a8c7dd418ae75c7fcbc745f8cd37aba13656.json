{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authService } from './auth.service';\n\n// Initial state\nconst initialState = {\n  user: authService.getUser(),\n  token: authService.getToken(),\n  isAuthenticated: authService.isAuthenticated(),\n  isLoading: false,\n  error: null\n};\n\n// Async thunks\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.login(credentials);\n    authService.storeAuthData(response.data.user, response.data.token);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    authService.logout();\n    return null;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n\n// Auth slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    },\n    clearAuth: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login cases\n    .addCase(loginUser.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      state.error = null;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n    })\n    // Logout cases\n    .addCase(logoutUser.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n      state.isLoading = false;\n    });\n  }\n});\nexport const {\n  clearError,\n  setUser,\n  clearAuth\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","initialState","user","getUser","token","getToken","isAuthenticated","isLoading","error","loginUser","credentials","rejectWithValue","response","login","storeAuthData","data","message","logoutUser","_","logout","authSlice","name","reducers","clearError","state","setUser","action","payload","clearAuth","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/services/auth/auth.slice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { AuthState, LoginRequest, User } from '../../types';\nimport { authService } from './auth.service';\n\n// Initial state\nconst initialState: AuthState = {\n  user: authService.getUser(),\n  token: authService.getToken(),\n  isAuthenticated: authService.isAuthenticated(),\n  isLoading: false,\n  error: null,\n};\n\n// Async thunks\nexport const loginUser = createAsyncThunk(\n  'auth/loginUser',\n  async (credentials: LoginRequest, { rejectWithValue }) => {\n    try {\n      const response = await authService.login(credentials);\n      authService.storeAuthData(response.data.user, response.data.token);\n      return response.data;\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logoutUser = createAsyncThunk(\n  'auth/logoutUser',\n  async (_, { rejectWithValue }) => {\n    try {\n      authService.logout();\n      return null;\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// Auth slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    setUser: (state, action: PayloadAction<User>) => {\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    },\n    clearAuth: (state) => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login cases\n      .addCase(loginUser.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n        state.error = null;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string;\n        state.isAuthenticated = false;\n      })\n      // Logout cases\n      .addCase(logoutUser.fulfilled, (state) => {\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n        state.error = null;\n        state.isLoading = false;\n      });\n  },\n});\n\nexport const { clearError, setUser, clearAuth } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}