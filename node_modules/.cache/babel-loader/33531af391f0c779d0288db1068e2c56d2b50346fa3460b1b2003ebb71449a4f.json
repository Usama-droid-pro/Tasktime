{"ast":null,"code":"var _jsxFileName = \"/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/pages/LogTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Input from '../components/ui/Input';\nimport Select from '../components/ui/Select';\nimport Calendar from '../components/ui/Calendar';\nimport { Plus, Trash2, CheckCircle, AlertCircle } from 'lucide-react';\nimport { DUMMY_PROJECTS } from '../constants/dummyData';\nimport { cn } from '../utils/helpers';\nimport ViewLogs from '../components/ViewLogs';\nimport { timesheetService, authService } from '../services';\nimport { transformFormToTaskLog } from '../utils/timesheet.utils';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LogTask = () => {\n  _s();\n  var _currentUser$name, _currentUser$name$cha;\n  const [searchParams] = useSearchParams();\n  const isFromEmployees = searchParams.get('user') && searchParams.get('name');\n  const [activeTab, setActiveTab] = useState(isFromEmployees ? 'view' : 'log');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [totalHours, setTotalHours] = useState('');\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    projectId: '',\n    description: '',\n    hours: ''\n  }]);\n\n  // New state for API integration\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([]);\n  const [isLoadingExistingData, setIsLoadingExistingData] = useState(false);\n\n  // Get current user info\n  const currentUser = authService.getUser();\n  const isAuthenticated = authService.isAuthenticated();\n\n  // Fetch existing task log when date changes\n  useEffect(() => {\n    const fetchExistingTaskLog = async () => {\n      if (!isAuthenticated || !currentUser || activeTab !== 'log') return;\n      setIsLoadingExistingData(true);\n      try {\n        const response = await timesheetService.getTaskLogByUserAndDate(currentUser.id, selectedDate);\n        if (response.success && response.data.taskLog) {\n          // Populate form with existing data\n          const taskLog = response.data.taskLog;\n          setTotalHours(taskLog.totalHours.toString());\n\n          // Convert tasks from API format to form format\n          const formattedTasks = taskLog.tasks.map((task, index) => {\n            // Find project by name\n            const project = DUMMY_PROJECTS.find(p => p.name === task.project_name);\n            return {\n              id: Date.now().toString() + index,\n              projectId: (project === null || project === void 0 ? void 0 : project.id) || '',\n              description: task.description,\n              hours: task.hours.toString()\n            };\n          });\n          setTasks(formattedTasks.length > 0 ? formattedTasks : [{\n            id: Date.now().toString(),\n            projectId: '',\n            description: '',\n            hours: ''\n          }]);\n          toast.success('Loaded existing task log for this date. You can update it.');\n        } else {\n          // No existing data, reset to empty form\n          resetFormToEmpty();\n        }\n      } catch (error) {\n        // If 404 or no data found, that's okay - user will create new entry\n        if (error.message.includes('not found') || error.message.includes('404')) {\n          resetFormToEmpty();\n        } else {\n          console.error('Failed to fetch existing task log:', error);\n        }\n      } finally {\n        setIsLoadingExistingData(false);\n      }\n    };\n    fetchExistingTaskLog();\n  }, [selectedDate, currentUser, isAuthenticated, activeTab]);\n  const resetFormToEmpty = () => {\n    setTotalHours('');\n    setTasks([{\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: ''\n    }]);\n  };\n  const addTask = () => {\n    const newTask = {\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: ''\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Real-time validation for total hours\n  const calculateTaskHoursSum = () => {\n    return tasks.reduce((sum, task) => {\n      const hours = parseFloat(task.hours) || 0;\n      return sum + hours;\n    }, 0);\n  };\n  const getHoursValidationStatus = () => {\n    const total = parseFloat(totalHours) || 0;\n    const taskSum = calculateTaskHoursSum();\n    const difference = Math.abs(total - taskSum);\n    if (!totalHours || total === 0) return null;\n    if (taskSum === 0) return null;\n    return {\n      isValid: difference <= 0.01,\n      total,\n      taskSum,\n      difference\n    };\n  };\n  const removeTask = taskId => {\n    if (tasks.length > 1) {\n      setTasks(tasks.filter(task => task.id !== taskId));\n    }\n  };\n  const updateTask = (taskId, field, value) => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      [field]: value\n    } : task));\n    // Clear validation errors when user starts typing\n    if (validationErrors.length > 0) {\n      setValidationErrors([]);\n    }\n  };\n  const projectOptions = DUMMY_PROJECTS.map(project => ({\n    value: project.id,\n    label: project.name\n  }));\n  const resetForm = () => {\n    setSelectedDate(new Date().toISOString().split('T')[0]);\n    setTotalHours('');\n    setTasks([{\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: ''\n    }]);\n    setValidationErrors([]);\n    setSubmitError(null);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous states\n    setSubmitError(null);\n    setValidationErrors([]);\n    setSubmitSuccess(false);\n\n    // Create form data object\n    const formData = {\n      date: selectedDate,\n      totalHours,\n      tasks\n    };\n\n    // Validate form\n    const validation = validateCompleteForm(formData);\n    if (!validation.isValid) {\n      setValidationErrors(validation.errors);\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      // Get current user from auth service\n      const currentUser = authService.getUser();\n      const employeeId = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) || '1'; // Fallback to '1' if no user is logged in\n\n      // Transform form data to API format\n      const taskLogData = transformFormToTaskLog(formData, employeeId, DUMMY_PROJECTS);\n\n      // Submit to API\n      await timesheetService.createTaskLog(taskLogData);\n\n      // Success handling\n      setSubmitSuccess(true);\n      setTimeout(() => {\n        setSubmitSuccess(false);\n        resetForm();\n      }, 3000);\n    } catch (error) {\n      console.error('Failed to submit time logs:', error);\n      setSubmitError(error instanceof Error ? error.message : 'Failed to save time logs. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Log Task\",\n    subtitle: \"Track your daily work hours\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-excel-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b border-excel-border\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"-mb-px flex space-x-excel-xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('log'),\n            className: cn('py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150', activeTab === 'log' ? 'border-excel-blue-500 text-excel-blue-500' : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'),\n            children: \"Log your task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('view'),\n            className: cn('py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150', activeTab === 'view' ? 'border-excel-blue-500 text-excel-blue-500' : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'),\n            children: \"View Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), activeTab === 'log' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-excel-border rounded-excel p-excel-xl\",\n        children: [isAuthenticated && currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 border border-blue-200 rounded-excel p-excel-md mb-excel-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-excel-sm font-medium\",\n              children: ((_currentUser$name = currentUser.name) === null || _currentUser$name === void 0 ? void 0 : (_currentUser$name$cha = _currentUser$name.charAt(0)) === null || _currentUser$name$cha === void 0 ? void 0 : _currentUser$name$cha.toUpperCase()) || 'U'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-sm font-medium text-blue-900\",\n                children: [\"Logging time for: \", currentUser.name || 'Unknown User']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-xs text-blue-700\",\n                children: [currentUser.email, \" \\u2022 \", currentUser.role || 'No role']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-50 border border-yellow-200 rounded-excel p-excel-md mb-excel-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-5 h-5 text-yellow-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-sm font-medium text-yellow-900\",\n                children: \"Not authenticated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-xs text-yellow-700\",\n                children: \"Time logs will be saved with a default user ID. Please log in for proper user tracking.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"space-y-excel-xl\",\n          children: [submitSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-50 border border-green-200 rounded-excel p-excel-md flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-5 h-5 text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-800 text-excel-sm font-medium\",\n              children: \"Time logs saved successfully! Form will reset in a moment.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), (submitError || validationErrors.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-50 border border-red-200 rounded-excel p-excel-md\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start space-x-excel-md\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                className: \"w-5 h-5 text-red-600 mt-0.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"text-red-800 text-excel-sm font-medium mb-excel-sm\",\n                  children: \"Please fix the following errors:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"text-red-700 text-excel-sm space-y-excel-xs\",\n                  children: [submitError && /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"\\u2022 \", submitError]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 41\n                  }, this), validationErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"\\u2022 \", error]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-excel-xl\",\n            children: [/*#__PURE__*/_jsxDEV(Calendar, {\n              label: \"Select Date\",\n              value: selectedDate,\n              onChange: setSelectedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-excel-sm\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                label: \"Total Hours\",\n                type: \"number\",\n                step: \"0.5\",\n                min: \"0\",\n                max: \"24\",\n                placeholder: \"Enter total hours worked\",\n                value: totalHours,\n                onChange: e => {\n                  setTotalHours(e.target.value);\n                  // Clear validation errors when user starts typing\n                  if (validationErrors.length > 0) {\n                    setValidationErrors([]);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this), (() => {\n                const validation = getHoursValidationStatus();\n                if (!validation) return null;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: cn(\"text-excel-xs px-excel-sm py-excel-xs rounded-excel flex items-center space-x-excel-xs\", validation.isValid ? \"bg-green-50 text-green-700\" : \"bg-yellow-50 text-yellow-700\"),\n                  children: validation.isValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                      className: \"w-3 h-3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Hours match (Total: \", validation.total, \", Tasks: \", validation.taskSum, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                      className: \"w-3 h-3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Hours mismatch (Total: \", validation.total, \", Tasks: \", validation.taskSum, \", Difference: \", validation.difference.toFixed(2), \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this);\n              })()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-excel-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-excel-lg font-semibold text-excel-text-primary\",\n                children: \"Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"outline\",\n                size: \"sm\",\n                leftIcon: /*#__PURE__*/_jsxDEV(Plus, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 31\n                }, this),\n                onClick: addTask,\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-excel-lg\",\n              children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-excel-border rounded-excel p-excel-lg bg-excel-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between mb-excel-md\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-excel-sm font-medium text-excel-text-primary\",\n                    children: [\"Task \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 25\n                  }, this), tasks.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    variant: \"ghost\",\n                    size: \"sm\",\n                    onClick: () => removeTask(task.id),\n                    className: \"text-red-600 hover:text-red-700 hover:bg-red-50\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-1 md:grid-cols-3 gap-excel-lg\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      label: \"Project\",\n                      options: projectOptions,\n                      placeholder: \"Select project...\",\n                      value: task.projectId,\n                      onChange: e => updateTask(task.id, 'projectId', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 27\n                    }, this), !task.projectId && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Project')) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-red-600 text-excel-xs mt-excel-xs\",\n                      children: \"Project is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      label: \"Description\",\n                      placeholder: \"Enter task description...\",\n                      value: task.description,\n                      onChange: e => updateTask(task.id, 'description', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 27\n                    }, this), !task.description.trim() && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Description')) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-red-600 text-excel-xs mt-excel-xs\",\n                      children: \"Description is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      label: \"Hours\",\n                      type: \"number\",\n                      step: \"0.5\",\n                      min: \"0\",\n                      max: \"24\",\n                      placeholder: \"Hours\",\n                      value: task.hours,\n                      onChange: e => updateTask(task.id, 'hours', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 27\n                    }, this), (() => {\n                      const hours = parseFloat(task.hours);\n                      const hasHoursError = validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Hours'));\n                      if (hasHoursError) {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-red-600 text-excel-xs mt-excel-xs\",\n                          children: \"Valid hours required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 477,\n                          columnNumber: 38\n                        }, this);\n                      }\n                      return null;\n                    })()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: resetForm,\n              disabled: isSubmitting,\n              children: \"Reset Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              disabled: isSubmitting,\n              children: isSubmitting ? 'Saving...' : 'Log Tasks'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), activeTab === 'view' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-[calc(100vh-200px)]\",\n        children: /*#__PURE__*/_jsxDEV(ViewLogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(LogTask, \"/mXC6R7A4MM81bAGT8c3vPld1fQ=\", false, function () {\n  return [useSearchParams];\n});\n_c = LogTask;\nexport default LogTask;\nvar _c;\n$RefreshReg$(_c, \"LogTask\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","DashboardLayout","Button","Input","Select","Calendar","Plus","Trash2","CheckCircle","AlertCircle","DUMMY_PROJECTS","cn","ViewLogs","timesheetService","authService","transformFormToTaskLog","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","LogTask","_s","_currentUser$name","_currentUser$name$cha","searchParams","isFromEmployees","get","activeTab","setActiveTab","selectedDate","setSelectedDate","Date","toISOString","split","totalHours","setTotalHours","tasks","setTasks","id","projectId","description","hours","isSubmitting","setIsSubmitting","submitError","setSubmitError","submitSuccess","setSubmitSuccess","validationErrors","setValidationErrors","isLoadingExistingData","setIsLoadingExistingData","currentUser","getUser","isAuthenticated","fetchExistingTaskLog","response","getTaskLogByUserAndDate","success","data","taskLog","toString","formattedTasks","map","task","index","project","find","p","name","project_name","now","length","resetFormToEmpty","error","message","includes","console","addTask","newTask","calculateTaskHoursSum","reduce","sum","parseFloat","getHoursValidationStatus","total","taskSum","difference","Math","abs","isValid","removeTask","taskId","filter","updateTask","field","value","projectOptions","label","resetForm","handleSubmit","e","preventDefault","formData","date","validation","validateCompleteForm","errors","employeeId","taskLogData","createTaskLog","setTimeout","Error","title","subtitle","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","email","role","onSubmit","onChange","type","step","min","max","placeholder","target","toFixed","variant","size","leftIcon","options","some","trim","hasHoursError","disabled","_c","$RefreshReg$"],"sources":["/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/pages/LogTask.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Input from '../components/ui/Input';\nimport Select from '../components/ui/Select';\nimport Calendar from '../components/ui/Calendar';\nimport { Plus, Trash2, CheckCircle, AlertCircle } from 'lucide-react';\nimport { DUMMY_PROJECTS, Project } from '../constants/dummyData';\nimport { cn } from '../utils/helpers';\nimport ViewLogs from '../components/ViewLogs';\nimport { timesheetService, authService } from '../services';\nimport { \n  validateFormFields, \n  transformFormToTaskLog, \n  TaskEntry as TaskEntryType,\n  DailyLogForm \n} from '../utils/timesheet.utils';\nimport toast from 'react-hot-toast';\n\ninterface LogTaskProps {}\n\nconst LogTask: React.FC<LogTaskProps> = () => {\n  const [searchParams] = useSearchParams();\n  const isFromEmployees = searchParams.get('user') && searchParams.get('name');\n  \n  const [activeTab, setActiveTab] = useState<'log' | 'view'>(\n    isFromEmployees ? 'view' : 'log'\n  );\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [totalHours, setTotalHours] = useState('');\n  const [tasks, setTasks] = useState<TaskEntryType[]>([\n    {\n      id: '1',\n      projectId: '',\n      description: '',\n      hours: '',\n    },\n  ]);\n  \n  // New state for API integration\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState<string | null>(null);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n  const [isLoadingExistingData, setIsLoadingExistingData] = useState(false);\n  \n  // Get current user info\n  const currentUser = authService.getUser();\n  const isAuthenticated = authService.isAuthenticated();\n\n  // Fetch existing task log when date changes\n  useEffect(() => {\n    const fetchExistingTaskLog = async () => {\n      if (!isAuthenticated || !currentUser || activeTab !== 'log') return;\n      \n      setIsLoadingExistingData(true);\n      \n      try {\n        const response = await timesheetService.getTaskLogByUserAndDate(\n          currentUser.id,\n          selectedDate\n        );\n        \n        if (response.success && response.data.taskLog) {\n          // Populate form with existing data\n          const taskLog = response.data.taskLog;\n          setTotalHours(taskLog.totalHours.toString());\n          \n          // Convert tasks from API format to form format\n          const formattedTasks = taskLog.tasks.map((task, index) => {\n            // Find project by name\n            const project = DUMMY_PROJECTS.find(p => p.name === task.project_name);\n            \n            return {\n              id: Date.now().toString() + index,\n              projectId: project?.id || '',\n              description: task.description,\n              hours: task.hours.toString(),\n            };\n          });\n          \n          setTasks(formattedTasks.length > 0 ? formattedTasks : [\n            {\n              id: Date.now().toString(),\n              projectId: '',\n              description: '',\n              hours: '',\n            }\n          ]);\n          \n          toast.success('Loaded existing task log for this date. You can update it.');\n        } else {\n          // No existing data, reset to empty form\n          resetFormToEmpty();\n        }\n      } catch (error: any) {\n        // If 404 or no data found, that's okay - user will create new entry\n        if (error.message.includes('not found') || error.message.includes('404')) {\n          resetFormToEmpty();\n        } else {\n          console.error('Failed to fetch existing task log:', error);\n        }\n      } finally {\n        setIsLoadingExistingData(false);\n      }\n    };\n    \n    fetchExistingTaskLog();\n  }, [selectedDate, currentUser, isAuthenticated, activeTab]);\n\n  const resetFormToEmpty = () => {\n    setTotalHours('');\n    setTasks([{\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: '',\n    }]);\n  };\n\n  const addTask = () => {\n    const newTask: TaskEntryType = {\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: '',\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  // Real-time validation for total hours\n  const calculateTaskHoursSum = () => {\n    return tasks.reduce((sum, task) => {\n      const hours = parseFloat(task.hours) || 0;\n      return sum + hours;\n    }, 0);\n  };\n\n  const getHoursValidationStatus = () => {\n    const total = parseFloat(totalHours) || 0;\n    const taskSum = calculateTaskHoursSum();\n    const difference = Math.abs(total - taskSum);\n    \n    if (!totalHours || total === 0) return null;\n    if (taskSum === 0) return null;\n    \n    return {\n      isValid: difference <= 0.01,\n      total,\n      taskSum,\n      difference\n    };\n  };\n\n  const removeTask = (taskId: string) => {\n    if (tasks.length > 1) {\n      setTasks(tasks.filter(task => task.id !== taskId));\n    }\n  };\n\n  const updateTask = (taskId: string, field: keyof TaskEntryType, value: string) => {\n    setTasks(tasks.map(task => \n      task.id === taskId ? { ...task, [field]: value } : task\n    ));\n    // Clear validation errors when user starts typing\n    if (validationErrors.length > 0) {\n      setValidationErrors([]);\n    }\n  };\n\n  const projectOptions = DUMMY_PROJECTS.map((project: Project) => ({\n    value: project.id,\n    label: project.name,\n  }));\n\n  const resetForm = () => {\n    setSelectedDate(new Date().toISOString().split('T')[0]);\n    setTotalHours('');\n    setTasks([{\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: '',\n    }]);\n    setValidationErrors([]);\n    setSubmitError(null);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Clear previous states\n    setSubmitError(null);\n    setValidationErrors([]);\n    setSubmitSuccess(false);\n    \n    // Create form data object\n    const formData: DailyLogForm = {\n      date: selectedDate,\n      totalHours,\n      tasks\n    };\n    \n    // Validate form\n    const validation = validateCompleteForm(formData);\n    if (!validation.isValid) {\n      setValidationErrors(validation.errors);\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Get current user from auth service\n      const currentUser = authService.getUser();\n      const employeeId = currentUser?.id || '1'; // Fallback to '1' if no user is logged in\n      \n      // Transform form data to API format\n      const taskLogData = transformFormToTaskLog(formData, employeeId, DUMMY_PROJECTS);\n      \n      // Submit to API\n      await timesheetService.createTaskLog(taskLogData);\n      \n      // Success handling\n      setSubmitSuccess(true);\n      setTimeout(() => {\n        setSubmitSuccess(false);\n        resetForm();\n      }, 3000);\n      \n    } catch (error) {\n      console.error('Failed to submit time logs:', error);\n      setSubmitError(error instanceof Error ? error.message : 'Failed to save time logs. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <DashboardLayout title=\"Log Task\" subtitle=\"Track your daily work hours\">\n      <div className=\"space-y-excel-xl\">\n        {/* Tabs */}\n        <div className=\"border-b border-excel-border\">\n          <nav className=\"-mb-px flex space-x-excel-xl\">\n            <button\n              onClick={() => setActiveTab('log')}\n              className={cn(\n                'py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150',\n                activeTab === 'log'\n                  ? 'border-excel-blue-500 text-excel-blue-500'\n                  : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'\n              )}\n            >\n              Log your task\n            </button>\n            <button\n              onClick={() => setActiveTab('view')}\n              className={cn(\n                'py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150',\n                activeTab === 'view'\n                  ? 'border-excel-blue-500 text-excel-blue-500'\n                  : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'\n              )}\n            >\n              View Logs\n            </button>\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === 'log' && (\n          <div className=\"bg-white border border-excel-border rounded-excel p-excel-xl\">\n            {/* Current User Info */}\n            {isAuthenticated && currentUser ? (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-excel p-excel-md mb-excel-xl\">\n                <div className=\"flex items-center space-x-excel-md\">\n                  <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-excel-sm font-medium\">\n                    {currentUser.name?.charAt(0)?.toUpperCase() || 'U'}\n                  </div>\n                  <div>\n                    <div className=\"text-excel-sm font-medium text-blue-900\">\n                      Logging time for: {currentUser.name || 'Unknown User'}\n                    </div>\n                    <div className=\"text-excel-xs text-blue-700\">\n                      {currentUser.email} • {currentUser.role || 'No role'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-excel p-excel-md mb-excel-xl\">\n                <div className=\"flex items-center space-x-excel-md\">\n                  <AlertCircle className=\"w-5 h-5 text-yellow-600\" />\n                  <div>\n                    <div className=\"text-excel-sm font-medium text-yellow-900\">\n                      Not authenticated\n                    </div>\n                    <div className=\"text-excel-xs text-yellow-700\">\n                      Time logs will be saved with a default user ID. Please log in for proper user tracking.\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <form onSubmit={handleSubmit} className=\"space-y-excel-xl\">\n              {/* Success Message */}\n              {submitSuccess && (\n                <div className=\"bg-green-50 border border-green-200 rounded-excel p-excel-md flex items-center space-x-excel-md\">\n                  <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                  <span className=\"text-green-800 text-excel-sm font-medium\">\n                    Time logs saved successfully! Form will reset in a moment.\n                  </span>\n                </div>\n              )}\n\n              {/* Error Messages */}\n              {(submitError || validationErrors.length > 0) && (\n                <div className=\"bg-red-50 border border-red-200 rounded-excel p-excel-md\">\n                  <div className=\"flex items-start space-x-excel-md\">\n                    <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5\" />\n                    <div className=\"flex-1\">\n                      <h4 className=\"text-red-800 text-excel-sm font-medium mb-excel-sm\">\n                        Please fix the following errors:\n                      </h4>\n                      <ul className=\"text-red-700 text-excel-sm space-y-excel-xs\">\n                        {submitError && <li>• {submitError}</li>}\n                        {validationErrors.map((error, index) => (\n                          <li key={index}>• {error}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Date and Total Hours Row */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-excel-xl\">\n                <Calendar\n                  label=\"Select Date\"\n                  value={selectedDate}\n                  onChange={setSelectedDate}\n                />\n                <div className=\"space-y-excel-sm\">\n                  <Input\n                    label=\"Total Hours\"\n                    type=\"number\"\n                    step=\"0.5\"\n                    min=\"0\"\n                    max=\"24\"\n                    placeholder=\"Enter total hours worked\"\n                    value={totalHours}\n                    onChange={(e) => {\n                      setTotalHours(e.target.value);\n                      // Clear validation errors when user starts typing\n                      if (validationErrors.length > 0) {\n                        setValidationErrors([]);\n                      }\n                    }}\n                  />\n                  {/* Real-time hours validation indicator */}\n                  {(() => {\n                    const validation = getHoursValidationStatus();\n                    if (!validation) return null;\n                    \n                    return (\n                      <div className={cn(\n                        \"text-excel-xs px-excel-sm py-excel-xs rounded-excel flex items-center space-x-excel-xs\",\n                        validation.isValid \n                          ? \"bg-green-50 text-green-700\" \n                          : \"bg-yellow-50 text-yellow-700\"\n                      )}>\n                        {validation.isValid ? (\n                          <>\n                            <CheckCircle className=\"w-3 h-3\" />\n                            <span>Hours match (Total: {validation.total}, Tasks: {validation.taskSum})</span>\n                          </>\n                        ) : (\n                          <>\n                            <AlertCircle className=\"w-3 h-3\" />\n                            <span>\n                              Hours mismatch (Total: {validation.total}, Tasks: {validation.taskSum}, \n                              Difference: {validation.difference.toFixed(2)})\n                            </span>\n                          </>\n                        )}\n                      </div>\n                    );\n                  })()}\n                </div>\n              </div>\n\n              {/* Task Entries */}\n              <div className=\"space-y-excel-lg\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-excel-lg font-semibold text-excel-text-primary\">\n                    Tasks\n                  </h3>\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    leftIcon={<Plus className=\"w-4 h-4\" />}\n                    onClick={addTask}\n                  >\n                    Add Task\n                  </Button>\n                </div>\n\n                <div className=\"space-y-excel-lg\">\n                  {tasks.map((task, index) => (\n                    <div\n                      key={task.id}\n                      className=\"border border-excel-border rounded-excel p-excel-lg bg-excel-gray-50\"\n                    >\n                      <div className=\"flex items-center justify-between mb-excel-md\">\n                        <h4 className=\"text-excel-sm font-medium text-excel-text-primary\">\n                          Task {index + 1}\n                        </h4>\n                        {tasks.length > 1 && (\n                          <Button\n                            type=\"button\"\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => removeTask(task.id)}\n                            className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        )}\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-excel-lg\">\n                        <div>\n                          <Select\n                            label=\"Project\"\n                            options={projectOptions}\n                            placeholder=\"Select project...\"\n                            value={task.projectId}\n                            onChange={(e) => updateTask(task.id, 'projectId', e.target.value)}\n                          />\n                          {!task.projectId && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Project')) && (\n                            <div className=\"text-red-600 text-excel-xs mt-excel-xs\">Project is required</div>\n                          )}\n                        </div>\n\n                        <div>\n                          <Input\n                            label=\"Description\"\n                            placeholder=\"Enter task description...\"\n                            value={task.description}\n                            onChange={(e) => updateTask(task.id, 'description', e.target.value)}\n                          />\n                          {!task.description.trim() && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Description')) && (\n                            <div className=\"text-red-600 text-excel-xs mt-excel-xs\">Description is required</div>\n                          )}\n                        </div>\n\n                        <div>\n                          <Input\n                            label=\"Hours\"\n                            type=\"number\"\n                            step=\"0.5\"\n                            min=\"0\"\n                            max=\"24\"\n                            placeholder=\"Hours\"\n                            value={task.hours}\n                            onChange={(e) => updateTask(task.id, 'hours', e.target.value)}\n                          />\n                          {(() => {\n                            const hours = parseFloat(task.hours);\n                            const hasHoursError = validationErrors.some(error => \n                              error.includes(`Task ${index + 1}`) && error.includes('Hours')\n                            );\n                            if (hasHoursError) {\n                              return <div className=\"text-red-600 text-excel-xs mt-excel-xs\">Valid hours required</div>;\n                            }\n                            return null;\n                          })()}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Submit Button */}\n              <div className=\"flex justify-end space-x-excel-md\">\n                <Button \n                  type=\"button\" \n                  variant=\"outline\"\n                  onClick={resetForm}\n                  disabled={isSubmitting}\n                >\n                  Reset Form\n                </Button>\n                <Button \n                  type=\"submit\" \n                  variant=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? 'Saving...' : 'Log Tasks'}\n                </Button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        {activeTab === 'view' && (\n          <div className=\"h-[calc(100vh-200px)]\">\n            <ViewLogs />\n          </div>\n        )}\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default LogTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}