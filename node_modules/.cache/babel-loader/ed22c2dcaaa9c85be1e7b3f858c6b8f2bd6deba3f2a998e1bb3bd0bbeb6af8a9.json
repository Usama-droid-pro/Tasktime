{"ast":null,"code":"var _jsxFileName = \"/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/pages/LogTask.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Input from '../components/ui/Input';\nimport Select from '../components/ui/Select';\nimport { Plus, Trash2, CheckCircle, AlertCircle } from 'lucide-react';\nimport { DUMMY_PROJECTS } from '../constants/dummyData';\nimport { cn } from '../utils/helpers';\nimport ViewLogs from '../components/ViewLogs';\nimport { timesheetService, authService } from '../services';\nimport { validateFormFields, transformFormToTaskLog } from '../utils/timesheet.utils';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogTask = () => {\n  _s();\n  var _currentUser$name, _currentUser$name$cha;\n  const [searchParams] = useSearchParams();\n  const isFromEmployees = searchParams.get('user') && searchParams.get('name');\n  const [activeTab, setActiveTab] = useState(isFromEmployees ? 'view' : 'log');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [totalHours, setTotalHours] = useState('');\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    projectId: '',\n    description: '',\n    hours: ''\n  }]);\n\n  // New state for API integration\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([]);\n  const [isLoadingExistingData, setIsLoadingExistingData] = useState(false);\n\n  // Get current user info - use useEffect to get stable reference\n  const [currentUser, setCurrentUser] = useState(authService.getUser());\n  const [isAuthenticated, setIsAuthenticated] = useState(authService.isAuthenticated());\n  useEffect(() => {\n    setCurrentUser(authService.getUser());\n    setIsAuthenticated(authService.isAuthenticated());\n  }, []);\n\n  // Fetch existing task log when date changes\n  useEffect(() => {\n    const fetchExistingTaskLog = async () => {\n      if (!isAuthenticated || !currentUser || activeTab !== 'log') return;\n      setIsLoadingExistingData(true);\n      try {\n        const response = await timesheetService.getTaskLogByUserAndDate(currentUser.id, selectedDate);\n        if (response.success && response.data.taskLog) {\n          // Populate form with existing data\n          const taskLog = response.data.taskLog;\n          setTotalHours(taskLog.totalHours.toString());\n\n          // Convert tasks from API format to form format\n          const formattedTasks = taskLog.tasks.map((task, index) => {\n            // Find project by name\n            const project = DUMMY_PROJECTS.find(p => p.name === task.project_name);\n            return {\n              id: Date.now().toString() + index,\n              projectId: (project === null || project === void 0 ? void 0 : project.id) || '',\n              description: task.description,\n              hours: task.hours.toString()\n            };\n          });\n          setTasks(formattedTasks.length > 0 ? formattedTasks : [{\n            id: Date.now().toString(),\n            projectId: '',\n            description: '',\n            hours: ''\n          }]);\n          toast.success('Loaded existing task log for this date. You can update it.');\n        } else {\n          // No existing data, reset to empty form\n          setTotalHours('');\n          setTasks([{\n            id: Date.now().toString(),\n            projectId: '',\n            description: '',\n            hours: ''\n          }]);\n        }\n      } catch (error) {\n        // If 404 or no data found, that's okay - user will create new entry\n        if (error.message.includes('not found') || error.message.includes('404')) {\n          setTotalHours('');\n          setTasks([{\n            id: Date.now().toString(),\n            projectId: '',\n            description: '',\n            hours: ''\n          }]);\n        } else {\n          console.error('Failed to fetch existing task log:', error);\n        }\n      } finally {\n        setIsLoadingExistingData(false);\n      }\n    };\n    fetchExistingTaskLog();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedDate, activeTab]);\n  const addTask = () => {\n    const newTask = {\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: ''\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const removeTask = taskId => {\n    if (tasks.length > 1) {\n      setTasks(tasks.filter(task => task.id !== taskId));\n    }\n  };\n  const updateTask = (taskId, field, value) => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      [field]: value\n    } : task));\n    // Clear validation errors when user starts typing\n    if (validationErrors.length > 0) {\n      setValidationErrors([]);\n    }\n  };\n  const projectOptions = DUMMY_PROJECTS.map(project => ({\n    value: project.id,\n    label: project.name\n  }));\n  const resetForm = () => {\n    setTotalHours('');\n    setTasks([{\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: ''\n    }]);\n    setValidationErrors([]);\n    setSubmitError(null);\n    setSubmitSuccess(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous states\n    setSubmitError(null);\n    setValidationErrors([]);\n    setSubmitSuccess(false);\n\n    // Create form data object\n    const formData = {\n      date: selectedDate,\n      totalHours,\n      tasks\n    };\n\n    // Validate form (removed total hours matching validation)\n    const validation = validateFormFields(formData);\n    if (!validation.isValid) {\n      setValidationErrors(validation.errors);\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      // Get current user from auth service\n      const currentUser = authService.getUser();\n      const employeeId = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) || '1'; // Fallback to '1' if no user is logged in\n\n      // Transform form data to API format\n      const taskLogData = transformFormToTaskLog(formData, employeeId, DUMMY_PROJECTS);\n\n      // Submit to API\n      await timesheetService.createTaskLog(taskLogData);\n\n      // Success handling\n      setSubmitSuccess(true);\n      setTimeout(() => {\n        setSubmitSuccess(false);\n        resetForm();\n      }, 3000);\n    } catch (error) {\n      console.error('Failed to submit time logs:', error);\n      setSubmitError(error instanceof Error ? error.message : 'Failed to save time logs. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Log Task\",\n    subtitle: \"Track your daily work hours\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-excel-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b border-excel-border\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"-mb-px flex space-x-excel-xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('log'),\n            className: cn('py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150', activeTab === 'log' ? 'border-excel-blue-500 text-excel-blue-500' : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'),\n            children: \"Log your task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('view'),\n            className: cn('py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150', activeTab === 'view' ? 'border-excel-blue-500 text-excel-blue-500' : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'),\n            children: \"View Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), activeTab === 'log' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-excel-border rounded-excel p-excel-xl\",\n        children: [isAuthenticated && currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 border border-blue-200 rounded-excel p-excel-md mb-excel-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-excel-sm font-medium\",\n              children: ((_currentUser$name = currentUser.name) === null || _currentUser$name === void 0 ? void 0 : (_currentUser$name$cha = _currentUser$name.charAt(0)) === null || _currentUser$name$cha === void 0 ? void 0 : _currentUser$name$cha.toUpperCase()) || 'U'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-sm font-medium text-blue-900\",\n                children: [\"Logging time for: \", currentUser.name || 'Unknown User']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-xs text-blue-700\",\n                children: [currentUser.email, \" \\u2022 \", currentUser.role || 'No role']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-50 border border-yellow-200 rounded-excel p-excel-md mb-excel-xl\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-5 h-5 text-yellow-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-sm font-medium text-yellow-900\",\n                children: \"Not authenticated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-excel-xs text-yellow-700\",\n                children: \"Time logs will be saved with a default user ID. Please log in for proper user tracking.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"space-y-excel-xl\",\n          children: [isLoadingExistingData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-50 border border-blue-200 rounded-excel p-excel-md flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-blue-800 text-excel-sm font-medium\",\n              children: \"Loading existing data for selected date...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this), submitSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-50 border border-green-200 rounded-excel p-excel-md flex items-center space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-5 h-5 text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-800 text-excel-sm font-medium\",\n              children: \"Time logs saved successfully! Form will reset in a moment.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), (submitError || validationErrors.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-50 border border-red-200 rounded-excel p-excel-md\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start space-x-excel-md\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                className: \"w-5 h-5 text-red-600 mt-0.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"text-red-800 text-excel-sm font-medium mb-excel-sm\",\n                  children: \"Please fix the following errors:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"text-red-700 text-excel-sm space-y-excel-xs\",\n                  children: [submitError && /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"\\u2022 \", submitError]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 41\n                  }, this), validationErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"\\u2022 \", error]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-excel-xl\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-excel-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-excel-sm font-medium text-excel-text-primary mb-excel-xs\",\n                children: \"Select Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: selectedDate,\n                onChange: e => setSelectedDate(e.target.value),\n                disabled: isLoadingExistingData,\n                className: \"input-excel disabled:bg-excel-gray-100 disabled:cursor-not-allowed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Total Hours\",\n              type: \"number\",\n              step: \"0.5\",\n              min: \"0\",\n              max: \"24\",\n              placeholder: \"Enter total hours worked\",\n              value: totalHours,\n              onChange: e => {\n                setTotalHours(e.target.value);\n                // Clear validation errors when user starts typing\n                if (validationErrors.length > 0) {\n                  setValidationErrors([]);\n                }\n              },\n              disabled: isLoadingExistingData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-excel-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-excel-lg font-semibold text-excel-text-primary\",\n                children: \"Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"outline\",\n                size: \"sm\",\n                leftIcon: /*#__PURE__*/_jsxDEV(Plus, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 31\n                }, this),\n                onClick: addTask,\n                disabled: isLoadingExistingData,\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-excel-lg\",\n              children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-excel-border rounded-excel p-excel-lg bg-excel-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between mb-excel-md\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-excel-sm font-medium text-excel-text-primary\",\n                    children: [\"Task \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 25\n                  }, this), tasks.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    variant: \"ghost\",\n                    size: \"sm\",\n                    onClick: () => removeTask(task.id),\n                    className: \"text-red-600 hover:text-red-700 hover:bg-red-50\",\n                    disabled: isLoadingExistingData,\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-1 md:grid-cols-3 gap-excel-lg\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Select, {\n                      label: \"Project\",\n                      options: projectOptions,\n                      placeholder: \"Select project...\",\n                      value: task.projectId,\n                      onChange: e => updateTask(task.id, 'projectId', e.target.value),\n                      disabled: isLoadingExistingData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 27\n                    }, this), !task.projectId && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Project')) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-red-600 text-excel-xs mt-excel-xs\",\n                      children: \"Project is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      label: \"Description\",\n                      placeholder: \"Enter task description...\",\n                      value: task.description,\n                      onChange: e => updateTask(task.id, 'description', e.target.value),\n                      disabled: isLoadingExistingData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 27\n                    }, this), !task.description.trim() && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Description')) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-red-600 text-excel-xs mt-excel-xs\",\n                      children: \"Description is required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, {\n                      label: \"Hours\",\n                      type: \"number\",\n                      step: \"0.5\",\n                      min: \"0\",\n                      max: \"24\",\n                      placeholder: \"Hours\",\n                      value: task.hours,\n                      onChange: e => updateTask(task.id, 'hours', e.target.value),\n                      disabled: isLoadingExistingData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 27\n                    }, this), (() => {\n                      const hours = parseFloat(task.hours);\n                      const hasHoursError = validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Hours'));\n                      if (hasHoursError) {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-red-600 text-excel-xs mt-excel-xs\",\n                          children: \"Valid hours required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 454,\n                          columnNumber: 38\n                        }, this);\n                      }\n                      return null;\n                    })()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 23\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-excel-md\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: resetForm,\n              disabled: isSubmitting || isLoadingExistingData,\n              children: \"Reset Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              disabled: isSubmitting || isLoadingExistingData,\n              children: isSubmitting ? 'Saving...' : 'Save Tasks'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), activeTab === 'view' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-[calc(100vh-200px)]\",\n        children: /*#__PURE__*/_jsxDEV(ViewLogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(LogTask, \"seeo2Zcb25ZR/S5yYrEEgTxtgJQ=\", false, function () {\n  return [useSearchParams];\n});\n_c = LogTask;\nexport default LogTask;\nvar _c;\n$RefreshReg$(_c, \"LogTask\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","DashboardLayout","Button","Input","Select","Plus","Trash2","CheckCircle","AlertCircle","DUMMY_PROJECTS","cn","ViewLogs","timesheetService","authService","validateFormFields","transformFormToTaskLog","toast","jsxDEV","_jsxDEV","LogTask","_s","_currentUser$name","_currentUser$name$cha","searchParams","isFromEmployees","get","activeTab","setActiveTab","selectedDate","setSelectedDate","Date","toISOString","split","totalHours","setTotalHours","tasks","setTasks","id","projectId","description","hours","isSubmitting","setIsSubmitting","submitError","setSubmitError","submitSuccess","setSubmitSuccess","validationErrors","setValidationErrors","isLoadingExistingData","setIsLoadingExistingData","currentUser","setCurrentUser","getUser","isAuthenticated","setIsAuthenticated","fetchExistingTaskLog","response","getTaskLogByUserAndDate","success","data","taskLog","toString","formattedTasks","map","task","index","project","find","p","name","project_name","now","length","error","message","includes","console","addTask","newTask","removeTask","taskId","filter","updateTask","field","value","projectOptions","label","resetForm","handleSubmit","e","preventDefault","formData","date","validation","isValid","errors","employeeId","taskLogData","createTaskLog","setTimeout","Error","title","subtitle","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","email","role","onSubmit","type","onChange","target","disabled","step","min","max","placeholder","variant","size","leftIcon","options","some","trim","parseFloat","hasHoursError","_c","$RefreshReg$"],"sources":["/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/pages/LogTask.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Input from '../components/ui/Input';\nimport Select from '../components/ui/Select';\nimport Calendar from '../components/ui/Calendar';\nimport { Plus, Trash2, CheckCircle, AlertCircle } from 'lucide-react';\nimport { DUMMY_PROJECTS, Project } from '../constants/dummyData';\nimport { cn } from '../utils/helpers';\nimport ViewLogs from '../components/ViewLogs';\nimport { timesheetService, authService } from '../services';\nimport { \n  validateFormFields, \n  transformFormToTaskLog, \n  TaskEntry as TaskEntryType,\n  DailyLogForm \n} from '../utils/timesheet.utils';\nimport toast from 'react-hot-toast';\n\ninterface LogTaskProps {}\n\nconst LogTask: React.FC<LogTaskProps> = () => {\n  const [searchParams] = useSearchParams();\n  const isFromEmployees = searchParams.get('user') && searchParams.get('name');\n  \n  const [activeTab, setActiveTab] = useState<'log' | 'view'>(\n    isFromEmployees ? 'view' : 'log'\n  );\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [totalHours, setTotalHours] = useState('');\n  const [tasks, setTasks] = useState<TaskEntryType[]>([\n    {\n      id: '1',\n      projectId: '',\n      description: '',\n      hours: '',\n    },\n  ]);\n  \n  // New state for API integration\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState<string | null>(null);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n  const [isLoadingExistingData, setIsLoadingExistingData] = useState(false);\n  \n  // Get current user info - use useEffect to get stable reference\n  const [currentUser, setCurrentUser] = useState(authService.getUser());\n  const [isAuthenticated, setIsAuthenticated] = useState(authService.isAuthenticated());\n\n  useEffect(() => {\n    setCurrentUser(authService.getUser());\n    setIsAuthenticated(authService.isAuthenticated());\n  }, []);\n\n  // Fetch existing task log when date changes\n  useEffect(() => {\n    const fetchExistingTaskLog = async () => {\n      if (!isAuthenticated || !currentUser || activeTab !== 'log') return;\n      \n      setIsLoadingExistingData(true);\n      \n      try {\n        const response = await timesheetService.getTaskLogByUserAndDate(\n          currentUser.id,\n          selectedDate\n        );\n        \n        if (response.success && response.data.taskLog) {\n          // Populate form with existing data\n          const taskLog = response.data.taskLog;\n          setTotalHours(taskLog.totalHours.toString());\n          \n          // Convert tasks from API format to form format\n          const formattedTasks = taskLog.tasks.map((task, index) => {\n            // Find project by name\n            const project = DUMMY_PROJECTS.find(p => p.name === task.project_name);\n            \n            return {\n              id: Date.now().toString() + index,\n              projectId: project?.id || '',\n              description: task.description,\n              hours: task.hours.toString(),\n            };\n          });\n          \n          setTasks(formattedTasks.length > 0 ? formattedTasks : [\n            {\n              id: Date.now().toString(),\n              projectId: '',\n              description: '',\n              hours: '',\n            }\n          ]);\n          \n          toast.success('Loaded existing task log for this date. You can update it.');\n        } else {\n          // No existing data, reset to empty form\n          setTotalHours('');\n          setTasks([{\n            id: Date.now().toString(),\n            projectId: '',\n            description: '',\n            hours: '',\n          }]);\n        }\n      } catch (error: any) {\n        // If 404 or no data found, that's okay - user will create new entry\n        if (error.message.includes('not found') || error.message.includes('404')) {\n          setTotalHours('');\n          setTasks([{\n            id: Date.now().toString(),\n            projectId: '',\n            description: '',\n            hours: '',\n          }]);\n        } else {\n          console.error('Failed to fetch existing task log:', error);\n        }\n      } finally {\n        setIsLoadingExistingData(false);\n      }\n    };\n    \n    fetchExistingTaskLog();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedDate, activeTab]);\n\n  const addTask = () => {\n    const newTask: TaskEntryType = {\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: '',\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n\n  const removeTask = (taskId: string) => {\n    if (tasks.length > 1) {\n      setTasks(tasks.filter(task => task.id !== taskId));\n    }\n  };\n\n  const updateTask = (taskId: string, field: keyof TaskEntryType, value: string) => {\n    setTasks(tasks.map(task => \n      task.id === taskId ? { ...task, [field]: value } : task\n    ));\n    // Clear validation errors when user starts typing\n    if (validationErrors.length > 0) {\n      setValidationErrors([]);\n    }\n  };\n\n  const projectOptions = DUMMY_PROJECTS.map((project: Project) => ({\n    value: project.id,\n    label: project.name,\n  }));\n\n  const resetForm = () => {\n    setTotalHours('');\n    setTasks([{\n      id: Date.now().toString(),\n      projectId: '',\n      description: '',\n      hours: '',\n    }]);\n    setValidationErrors([]);\n    setSubmitError(null);\n    setSubmitSuccess(false);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Clear previous states\n    setSubmitError(null);\n    setValidationErrors([]);\n    setSubmitSuccess(false);\n    \n    // Create form data object\n    const formData: DailyLogForm = {\n      date: selectedDate,\n      totalHours,\n      tasks\n    };\n    \n    // Validate form (removed total hours matching validation)\n    const validation = validateFormFields(formData);\n    if (!validation.isValid) {\n      setValidationErrors(validation.errors);\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Get current user from auth service\n      const currentUser = authService.getUser();\n      const employeeId = currentUser?.id || '1'; // Fallback to '1' if no user is logged in\n      \n      // Transform form data to API format\n      const taskLogData = transformFormToTaskLog(formData, employeeId, DUMMY_PROJECTS);\n      \n      // Submit to API\n      await timesheetService.createTaskLog(taskLogData);\n      \n      // Success handling\n      setSubmitSuccess(true);\n      setTimeout(() => {\n        setSubmitSuccess(false);\n        resetForm();\n      }, 3000);\n      \n    } catch (error) {\n      console.error('Failed to submit time logs:', error);\n      setSubmitError(error instanceof Error ? error.message : 'Failed to save time logs. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <DashboardLayout title=\"Log Task\" subtitle=\"Track your daily work hours\">\n      <div className=\"space-y-excel-xl\">\n        {/* Tabs */}\n        <div className=\"border-b border-excel-border\">\n          <nav className=\"-mb-px flex space-x-excel-xl\">\n            <button\n              onClick={() => setActiveTab('log')}\n              className={cn(\n                'py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150',\n                activeTab === 'log'\n                  ? 'border-excel-blue-500 text-excel-blue-500'\n                  : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'\n              )}\n            >\n              Log your task\n            </button>\n            <button\n              onClick={() => setActiveTab('view')}\n              className={cn(\n                'py-excel-md px-excel-lg border-b-2 font-medium text-excel-sm transition-colors duration-150',\n                activeTab === 'view'\n                  ? 'border-excel-blue-500 text-excel-blue-500'\n                  : 'border-transparent text-excel-text-muted hover:text-excel-text-primary hover:border-excel-gray-300'\n              )}\n            >\n              View Logs\n            </button>\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === 'log' && (\n          <div className=\"bg-white border border-excel-border rounded-excel p-excel-xl\">\n            {/* Current User Info */}\n            {isAuthenticated && currentUser ? (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-excel p-excel-md mb-excel-xl\">\n                <div className=\"flex items-center space-x-excel-md\">\n                  <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-excel-sm font-medium\">\n                    {currentUser.name?.charAt(0)?.toUpperCase() || 'U'}\n                  </div>\n                  <div>\n                    <div className=\"text-excel-sm font-medium text-blue-900\">\n                      Logging time for: {currentUser.name || 'Unknown User'}\n                    </div>\n                    <div className=\"text-excel-xs text-blue-700\">\n                      {currentUser.email} • {currentUser.role || 'No role'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-excel p-excel-md mb-excel-xl\">\n                <div className=\"flex items-center space-x-excel-md\">\n                  <AlertCircle className=\"w-5 h-5 text-yellow-600\" />\n                  <div>\n                    <div className=\"text-excel-sm font-medium text-yellow-900\">\n                      Not authenticated\n                    </div>\n                    <div className=\"text-excel-xs text-yellow-700\">\n                      Time logs will be saved with a default user ID. Please log in for proper user tracking.\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <form onSubmit={handleSubmit} className=\"space-y-excel-xl\">\n              {/* Loading State */}\n              {isLoadingExistingData && (\n                <div className=\"bg-blue-50 border border-blue-200 rounded-excel p-excel-md flex items-center space-x-excel-md\">\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600\"></div>\n                  <span className=\"text-blue-800 text-excel-sm font-medium\">\n                    Loading existing data for selected date...\n                  </span>\n                </div>\n              )}\n\n              {/* Success Message */}\n              {submitSuccess && (\n                <div className=\"bg-green-50 border border-green-200 rounded-excel p-excel-md flex items-center space-x-excel-md\">\n                  <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                  <span className=\"text-green-800 text-excel-sm font-medium\">\n                    Time logs saved successfully! Form will reset in a moment.\n                  </span>\n                </div>\n              )}\n\n              {/* Error Messages */}\n              {(submitError || validationErrors.length > 0) && (\n                <div className=\"bg-red-50 border border-red-200 rounded-excel p-excel-md\">\n                  <div className=\"flex items-start space-x-excel-md\">\n                    <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5\" />\n                    <div className=\"flex-1\">\n                      <h4 className=\"text-red-800 text-excel-sm font-medium mb-excel-sm\">\n                        Please fix the following errors:\n                      </h4>\n                      <ul className=\"text-red-700 text-excel-sm space-y-excel-xs\">\n                        {submitError && <li>• {submitError}</li>}\n                        {validationErrors.map((error, index) => (\n                          <li key={index}>• {error}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Date and Total Hours Row */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-excel-xl\">\n                <div className=\"space-y-excel-sm\">\n                  <label className=\"block text-excel-sm font-medium text-excel-text-primary mb-excel-xs\">\n                    Select Date\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={selectedDate}\n                    onChange={(e) => setSelectedDate(e.target.value)}\n                    disabled={isLoadingExistingData}\n                    className=\"input-excel disabled:bg-excel-gray-100 disabled:cursor-not-allowed\"\n                  />\n                </div>\n                <Input\n                  label=\"Total Hours\"\n                  type=\"number\"\n                  step=\"0.5\"\n                  min=\"0\"\n                  max=\"24\"\n                  placeholder=\"Enter total hours worked\"\n                  value={totalHours}\n                  onChange={(e) => {\n                    setTotalHours(e.target.value);\n                    // Clear validation errors when user starts typing\n                    if (validationErrors.length > 0) {\n                      setValidationErrors([]);\n                    }\n                  }}\n                  disabled={isLoadingExistingData}\n                />\n              </div>\n\n              {/* Task Entries */}\n              <div className=\"space-y-excel-lg\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-excel-lg font-semibold text-excel-text-primary\">\n                    Tasks\n                  </h3>\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    leftIcon={<Plus className=\"w-4 h-4\" />}\n                    onClick={addTask}\n                    disabled={isLoadingExistingData}\n                  >\n                    Add Task\n                  </Button>\n                </div>\n\n                <div className=\"space-y-excel-lg\">\n                  {tasks.map((task, index) => (\n                    <div\n                      key={task.id}\n                      className=\"border border-excel-border rounded-excel p-excel-lg bg-excel-gray-50\"\n                    >\n                      <div className=\"flex items-center justify-between mb-excel-md\">\n                        <h4 className=\"text-excel-sm font-medium text-excel-text-primary\">\n                          Task {index + 1}\n                        </h4>\n                        {tasks.length > 1 && (\n                          <Button\n                            type=\"button\"\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => removeTask(task.id)}\n                            className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n                            disabled={isLoadingExistingData}\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        )}\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-excel-lg\">\n                        <div>\n                          <Select\n                            label=\"Project\"\n                            options={projectOptions}\n                            placeholder=\"Select project...\"\n                            value={task.projectId}\n                            onChange={(e) => updateTask(task.id, 'projectId', e.target.value)}\n                            disabled={isLoadingExistingData}\n                          />\n                          {!task.projectId && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Project')) && (\n                            <div className=\"text-red-600 text-excel-xs mt-excel-xs\">Project is required</div>\n                          )}\n                        </div>\n\n                        <div>\n                          <Input\n                            label=\"Description\"\n                            placeholder=\"Enter task description...\"\n                            value={task.description}\n                            onChange={(e) => updateTask(task.id, 'description', e.target.value)}\n                            disabled={isLoadingExistingData}\n                          />\n                          {!task.description.trim() && validationErrors.some(error => error.includes(`Task ${index + 1}`) && error.includes('Description')) && (\n                            <div className=\"text-red-600 text-excel-xs mt-excel-xs\">Description is required</div>\n                          )}\n                        </div>\n\n                        <div>\n                          <Input\n                            label=\"Hours\"\n                            type=\"number\"\n                            step=\"0.5\"\n                            min=\"0\"\n                            max=\"24\"\n                            placeholder=\"Hours\"\n                            value={task.hours}\n                            onChange={(e) => updateTask(task.id, 'hours', e.target.value)}\n                            disabled={isLoadingExistingData}\n                          />\n                          {(() => {\n                            const hours = parseFloat(task.hours);\n                            const hasHoursError = validationErrors.some(error => \n                              error.includes(`Task ${index + 1}`) && error.includes('Hours')\n                            );\n                            if (hasHoursError) {\n                              return <div className=\"text-red-600 text-excel-xs mt-excel-xs\">Valid hours required</div>;\n                            }\n                            return null;\n                          })()}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Submit Button */}\n              <div className=\"flex justify-end space-x-excel-md\">\n                <Button \n                  type=\"button\" \n                  variant=\"outline\"\n                  onClick={resetForm}\n                  disabled={isSubmitting || isLoadingExistingData}\n                >\n                  Reset Form\n                </Button>\n                <Button \n                  type=\"submit\" \n                  variant=\"primary\"\n                  disabled={isSubmitting || isLoadingExistingData}\n                >\n                  {isSubmitting ? 'Saving...' : 'Save Tasks'}\n                </Button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        {activeTab === 'view' && (\n          <div className=\"h-[calc(100vh-200px)]\">\n            <ViewLogs />\n          </div>\n        )}\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default LogTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}