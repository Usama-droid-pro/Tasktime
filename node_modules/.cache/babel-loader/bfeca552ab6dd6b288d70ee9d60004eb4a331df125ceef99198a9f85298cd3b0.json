{"ast":null,"code":"var _jsxFileName = \"/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/pages/EmployeeReport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Select from '../components/ui/Select';\nimport { cn } from '../utils/helpers';\nimport { Download, ArrowLeft, Loader2, AlertCircle, RefreshCw } from 'lucide-react';\nimport { SAMPLE_LOG_DATA } from '../constants/sampleLogData';\nimport { DUMMY_PROJECTS } from '../constants/dummyData';\nimport { timesheetService } from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeReport = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const employeeName = searchParams.get('name') || 'Employee';\n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7)); // YYYY-MM format\n\n  // API state management\n  const [apiTaskLogs, setApiTaskLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [useRealData, setUseRealData] = useState(true); // Default to API data\n\n  // Fetch employee task logs from API\n  const fetchEmployeeTaskLogs = async (employeeId, month) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      let startDate;\n      let endDate;\n      if (month) {\n        // Convert YYYY-MM to date range\n        const [year, monthNum] = month.split('-');\n        const firstDay = new Date(parseInt(year), parseInt(monthNum) - 1, 1);\n        const lastDay = new Date(parseInt(year), parseInt(monthNum), 0);\n        startDate = firstDay.toISOString().split('T')[0];\n        endDate = lastDay.toISOString().split('T')[0];\n      }\n      const response = await timesheetService.getTaskLogsByEmployee(employeeId, startDate, endDate);\n      setApiTaskLogs(response.data.taskLogs || []);\n      console.log('Employee task logs fetched:', response.data.taskLogs);\n    } catch (err) {\n      console.error('Failed to fetch employee task logs:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch employee task logs');\n      setApiTaskLogs([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Generate month options for the last 12 months\n  const generateMonthOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 12; i++) {\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth() - i, 1);\n      const value = date.toISOString().slice(0, 7);\n      const label = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long'\n      });\n      options.push({\n        value,\n        label\n      });\n    }\n    return options;\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    if (userId && useRealData) {\n      fetchEmployeeTaskLogs(userId, selectedMonth);\n    }\n  }, []);\n\n  // Fetch data when month or user changes (only if using real data)\n  useEffect(() => {\n    if (userId && useRealData) {\n      fetchEmployeeTaskLogs(userId, selectedMonth);\n    }\n  }, [selectedMonth, useRealData, userId]);\n\n  // Process API task logs to generate employee report\n  const processApiEmployeeReportData = () => {\n    if (!apiTaskLogs.length) return [];\n    const reportData = {};\n\n    // Process task logs\n    apiTaskLogs.forEach(taskLog => {\n      taskLog.tasks.forEach(task => {\n        const projectName = task.project_name;\n        if (!reportData[projectName]) {\n          reportData[projectName] = {\n            project: projectName,\n            totalHours: 0,\n            taskCount: 0,\n            avgHoursPerTask: 0\n          };\n        }\n        reportData[projectName].totalHours += task.hours;\n        reportData[projectName].taskCount += 1;\n      });\n    });\n\n    // Calculate average hours per task\n    Object.values(reportData).forEach(project => {\n      project.avgHoursPerTask = project.taskCount > 0 ? project.totalHours / project.taskCount : 0;\n    });\n    return Object.values(reportData).filter(project => project.totalHours > 0);\n  };\n\n  // Process log data to generate employee report (dummy data)\n  const generateEmployeeReportData = () => {\n    const reportData = {};\n\n    // Initialize all projects\n    DUMMY_PROJECTS.forEach(project => {\n      reportData[project.name] = {\n        project: project.name,\n        totalHours: 0,\n        taskCount: 0,\n        avgHoursPerTask: 0\n      };\n    });\n\n    // Process log entries for selected month and user\n    const [year, month] = selectedMonth.split('-');\n    SAMPLE_LOG_DATA.forEach(log => {\n      const logDate = new Date(log.date);\n      if (logDate.getFullYear() === parseInt(year) && logDate.getMonth() === parseInt(month) - 1 && log.userId === parseInt(userId || '0')) {\n        log.tasks.forEach(task => {\n          if (reportData[task.projectName]) {\n            reportData[task.projectName].totalHours += task.hours;\n            reportData[task.projectName].taskCount += 1;\n          }\n        });\n      }\n    });\n\n    // Calculate average hours per task\n    Object.values(reportData).forEach(project => {\n      project.avgHoursPerTask = project.taskCount > 0 ? project.totalHours / project.taskCount : 0;\n    });\n    return Object.values(reportData).filter(project => project.totalHours > 0);\n  };\n  const reportData = useRealData ? processApiEmployeeReportData() : generateEmployeeReportData();\n\n  // Calculate summary totals\n  const summaryTotals = reportData.reduce((totals, row) => ({\n    totalHours: totals.totalHours + row.totalHours,\n    taskCount: totals.taskCount + row.taskCount,\n    avgHoursPerTask: totals.avgHoursPerTask + row.avgHoursPerTask\n  }), {\n    totalHours: 0,\n    taskCount: 0,\n    avgHoursPerTask: 0\n  });\n\n  // Generate column headers (A, B, C, D, E)\n  const columnHeaders = ['A', 'B', 'C', 'D', 'E'];\n  const totalColumns = 5; // Project, Total Hours, Task Count, Avg Hours/Task, (empty for Excel feel)\n\n  const exportToExcel = () => {\n    // Create CSV content\n    const headers = ['Project', 'Total Hours', 'Task Count', 'Avg Hours/Task'];\n    const csvContent = [headers.join(','), ...reportData.map(row => [`\"${row.project}\"`, row.totalHours, row.taskCount, row.avgHoursPerTask.toFixed(2)].join(',')),\n    // Add summary row\n    ['\"TOTAL\"', summaryTotals.totalHours, summaryTotals.taskCount, summaryTotals.taskCount > 0 ? (summaryTotals.totalHours / summaryTotals.taskCount).toFixed(2) : '0'].join(',')].join('\\n');\n\n    // Create and download file\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${employeeName}_report_${selectedMonth}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const goBack = () => {\n    navigate('/employees');\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Employee Report\",\n    subtitle: `${employeeName} - Project hours and performance`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-excel-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-excel-lg\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"sm\",\n            leftIcon: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 25\n            }, this),\n            onClick: goBack,\n            children: \"Back to Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-excel-xl font-semibold text-excel-text-primary\",\n              children: [employeeName, \" - Project Report\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-excel-sm text-excel-text-muted mt-excel-xs\",\n              children: \"Individual project hours and task performance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setUseRealData(!useRealData),\n            className: cn(\"px-excel-sm py-excel-xs text-excel-xs rounded-excel border transition-colors\", useRealData ? \"bg-blue-50 text-blue-700 border-blue-200\" : \"bg-gray-50 text-gray-700 border-gray-200\"),\n            title: useRealData ? \"Switch to demo data\" : \"Switch to real API data\",\n            children: useRealData ? \"API Data\" : \"Demo Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-xs text-excel-sm text-excel-text-muted\",\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"w-4 h-4 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-excel-xs text-excel-sm text-red-600\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-excel-lg\",\n          children: [useRealData && userId && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"sm\",\n            leftIcon: /*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 27\n            }, this),\n            onClick: () => fetchEmployeeTaskLogs(userId, selectedMonth),\n            disabled: isLoading,\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            label: \"\",\n            options: generateMonthOptions(),\n            value: selectedMonth,\n            onChange: e => setSelectedMonth(e.target.value),\n            className: \"w-48\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            leftIcon: /*#__PURE__*/_jsxDEV(Download, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 25\n            }, this),\n            onClick: exportToExcel,\n            disabled: isLoading,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-excel-border rounded-excel overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full border-collapse\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-excel-gray-100 border-b border-excel-border\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"w-12 h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this), columnHeaders.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: cn('h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center', index === 0 && 'w-48',\n                  // Project column\n                  index === 1 && 'w-24',\n                  // Total Hours column\n                  index === 2 && 'w-24',\n                  // Task Count column\n                  index === 3 && 'w-32',\n                  // Avg Hours/Task column\n                  index > 3 && 'w-20' // Other columns\n                  ),\n                  children: col\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-excel-header border-b border-excel-border\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-left\",\n                  children: \"Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\",\n                  children: \"Total Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\",\n                  children: \"Task Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\",\n                  children: \"Avg Hours/Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [isLoading ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 5,\n                  className: \"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-excel-text-muted bg-excel-gray-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-center space-x-excel-md\",\n                    children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                      className: \"w-4 h-4 animate-spin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Loading employee report...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this) : error ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 5,\n                  className: \"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-red-600 bg-red-50\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-center space-x-excel-md\",\n                    children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: error\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 25\n                    }, this), userId && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => fetchEmployeeTaskLogs(userId, selectedMonth),\n                      className: \"text-blue-600 hover:text-blue-700 underline\",\n                      children: \"Retry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this) : reportData.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 5,\n                  className: \"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-excel-text-muted bg-excel-gray-50\",\n                  children: [\"No task logs found for \", employeeName, \" in the selected period.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this) : reportData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-excel-hover border-b border-excel-border\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center\",\n                  children: rowIndex + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary font-medium\",\n                  children: row.project\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\",\n                  children: row.totalHours\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\",\n                  children: row.taskCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\",\n                  children: row.avgHoursPerTask.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 21\n                }, this)]\n              }, row.project, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this)), !isLoading && !error && reportData.length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-excel-gray-100 border-t-2 border-excel-border font-semibold\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center\",\n                  children: reportData.length + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary font-bold\",\n                  children: \"TOTAL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\",\n                  children: summaryTotals.totalHours\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\",\n                  children: summaryTotals.taskCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\",\n                  children: summaryTotals.taskCount > 0 ? (summaryTotals.totalHours / summaryTotals.taskCount).toFixed(2) : '0'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeReport, \"hDU2pQYYxiNt02g2VUvC2C7+3k0=\", false, function () {\n  return [useParams, useSearchParams, useNavigate];\n});\n_c = EmployeeReport;\nexport default EmployeeReport;\nvar _c;\n$RefreshReg$(_c, \"EmployeeReport\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useSearchParams","DashboardLayout","Button","Select","cn","Download","ArrowLeft","Loader2","AlertCircle","RefreshCw","SAMPLE_LOG_DATA","DUMMY_PROJECTS","timesheetService","jsxDEV","_jsxDEV","EmployeeReport","_s","userId","searchParams","navigate","employeeName","get","selectedMonth","setSelectedMonth","Date","toISOString","slice","apiTaskLogs","setApiTaskLogs","isLoading","setIsLoading","error","setError","useRealData","setUseRealData","fetchEmployeeTaskLogs","employeeId","month","startDate","endDate","year","monthNum","split","firstDay","parseInt","lastDay","response","getTaskLogsByEmployee","data","taskLogs","console","log","err","Error","message","generateMonthOptions","options","currentDate","i","date","getFullYear","getMonth","value","label","toLocaleDateString","push","processApiEmployeeReportData","length","reportData","forEach","taskLog","tasks","task","projectName","project_name","project","totalHours","taskCount","avgHoursPerTask","hours","Object","values","filter","generateEmployeeReportData","name","logDate","summaryTotals","reduce","totals","row","columnHeaders","totalColumns","exportToExcel","headers","csvContent","join","map","toFixed","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","goBack","title","subtitle","children","className","variant","size","leftIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","e","target","col","index","colSpan","rowIndex","_c","$RefreshReg$"],"sources":["/Users/lapteck/Developer/Company/Timesheet/Front End TS/src/pages/EmployeeReport.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Select from '../components/ui/Select';\nimport { cn } from '../utils/helpers';\nimport { Download, ArrowLeft, Loader2, AlertCircle, RefreshCw } from 'lucide-react';\nimport { SAMPLE_LOG_DATA } from '../constants/sampleLogData';\nimport { DUMMY_PROJECTS } from '../constants/dummyData';\nimport { DUMMY_USERS } from '../constants/dummyData';\nimport { timesheetService } from '../services';\n\ninterface EmployeeReportProps {}\n\ninterface EmployeeReportData {\n  project: string;\n  totalHours: number;\n  taskCount: number;\n  avgHoursPerTask: number;\n}\n\nconst EmployeeReport: React.FC<EmployeeReportProps> = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const employeeName = searchParams.get('name') || 'Employee';\n  \n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7)); // YYYY-MM format\n  \n  // API state management\n  const [apiTaskLogs, setApiTaskLogs] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [useRealData, setUseRealData] = useState(true); // Default to API data\n\n  // Fetch employee task logs from API\n  const fetchEmployeeTaskLogs = async (employeeId: string, month?: string) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      let startDate: string | undefined;\n      let endDate: string | undefined;\n      \n      if (month) {\n        // Convert YYYY-MM to date range\n        const [year, monthNum] = month.split('-');\n        const firstDay = new Date(parseInt(year), parseInt(monthNum) - 1, 1);\n        const lastDay = new Date(parseInt(year), parseInt(monthNum), 0);\n        \n        startDate = firstDay.toISOString().split('T')[0];\n        endDate = lastDay.toISOString().split('T')[0];\n      }\n      \n      const response = await timesheetService.getTaskLogsByEmployee(employeeId, startDate, endDate);\n      setApiTaskLogs(response.data.taskLogs || []);\n      console.log('Employee task logs fetched:', response.data.taskLogs);\n    } catch (err) {\n      console.error('Failed to fetch employee task logs:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch employee task logs');\n      setApiTaskLogs([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Generate month options for the last 12 months\n  const generateMonthOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    \n    for (let i = 0; i < 12; i++) {\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth() - i, 1);\n      const value = date.toISOString().slice(0, 7);\n      const label = date.toLocaleDateString('en-US', { year: 'numeric', month: 'long' });\n      options.push({ value, label });\n    }\n    \n    return options;\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    if (userId && useRealData) {\n      fetchEmployeeTaskLogs(userId, selectedMonth);\n    }\n  }, []);\n\n  // Fetch data when month or user changes (only if using real data)\n  useEffect(() => {\n    if (userId && useRealData) {\n      fetchEmployeeTaskLogs(userId, selectedMonth);\n    }\n  }, [selectedMonth, useRealData, userId]);\n\n  // Process API task logs to generate employee report\n  const processApiEmployeeReportData = (): EmployeeReportData[] => {\n    if (!apiTaskLogs.length) return [];\n    \n    const reportData: { [key: string]: EmployeeReportData } = {};\n    \n    // Process task logs\n    apiTaskLogs.forEach(taskLog => {\n      taskLog.tasks.forEach((task: any) => {\n        const projectName = task.project_name;\n        \n        if (!reportData[projectName]) {\n          reportData[projectName] = {\n            project: projectName,\n            totalHours: 0,\n            taskCount: 0,\n            avgHoursPerTask: 0,\n          };\n        }\n        \n        reportData[projectName].totalHours += task.hours;\n        reportData[projectName].taskCount += 1;\n      });\n    });\n\n    // Calculate average hours per task\n    Object.values(reportData).forEach(project => {\n      project.avgHoursPerTask = project.taskCount > 0 ? project.totalHours / project.taskCount : 0;\n    });\n\n    return Object.values(reportData).filter(project => project.totalHours > 0);\n  };\n\n  // Process log data to generate employee report (dummy data)\n  const generateEmployeeReportData = (): EmployeeReportData[] => {\n    const reportData: { [key: string]: EmployeeReportData } = {};\n    \n    // Initialize all projects\n    DUMMY_PROJECTS.forEach(project => {\n      reportData[project.name] = {\n        project: project.name,\n        totalHours: 0,\n        taskCount: 0,\n        avgHoursPerTask: 0,\n      };\n    });\n\n    // Process log entries for selected month and user\n    const [year, month] = selectedMonth.split('-');\n    SAMPLE_LOG_DATA.forEach(log => {\n      const logDate = new Date(log.date);\n      if (logDate.getFullYear() === parseInt(year) && \n          logDate.getMonth() === parseInt(month) - 1 && \n          log.userId === parseInt(userId || '0')) {\n        log.tasks.forEach(task => {\n          if (reportData[task.projectName]) {\n            reportData[task.projectName].totalHours += task.hours;\n            reportData[task.projectName].taskCount += 1;\n          }\n        });\n      }\n    });\n\n    // Calculate average hours per task\n    Object.values(reportData).forEach(project => {\n      project.avgHoursPerTask = project.taskCount > 0 ? project.totalHours / project.taskCount : 0;\n    });\n\n    return Object.values(reportData).filter(project => project.totalHours > 0);\n  };\n\n  const reportData = useRealData ? processApiEmployeeReportData() : generateEmployeeReportData();\n\n  // Calculate summary totals\n  const summaryTotals = reportData.reduce(\n    (totals, row) => ({\n      totalHours: totals.totalHours + row.totalHours,\n      taskCount: totals.taskCount + row.taskCount,\n      avgHoursPerTask: totals.avgHoursPerTask + row.avgHoursPerTask,\n    }),\n    { totalHours: 0, taskCount: 0, avgHoursPerTask: 0 }\n  );\n\n  // Generate column headers (A, B, C, D, E)\n  const columnHeaders = ['A', 'B', 'C', 'D', 'E'];\n  const totalColumns = 5; // Project, Total Hours, Task Count, Avg Hours/Task, (empty for Excel feel)\n\n  const exportToExcel = () => {\n    // Create CSV content\n    const headers = ['Project', 'Total Hours', 'Task Count', 'Avg Hours/Task'];\n    const csvContent = [\n      headers.join(','),\n      ...reportData.map(row => [\n        `\"${row.project}\"`,\n        row.totalHours,\n        row.taskCount,\n        row.avgHoursPerTask.toFixed(2),\n      ].join(',')),\n      // Add summary row\n      [\n        '\"TOTAL\"',\n        summaryTotals.totalHours,\n        summaryTotals.taskCount,\n        summaryTotals.taskCount > 0 ? (summaryTotals.totalHours / summaryTotals.taskCount).toFixed(2) : '0',\n      ].join(',')\n    ].join('\\n');\n\n    // Create and download file\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${employeeName}_report_${selectedMonth}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const goBack = () => {\n    navigate('/employees');\n  };\n\n  return (\n    <DashboardLayout title=\"Employee Report\" subtitle={`${employeeName} - Project hours and performance`}>\n      <div className=\"space-y-excel-xl\">\n        {/* Header Actions */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-excel-lg\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              leftIcon={<ArrowLeft className=\"w-4 h-4\" />}\n              onClick={goBack}\n            >\n              Back to Employees\n            </Button>\n            <div>\n              <h2 className=\"text-excel-xl font-semibold text-excel-text-primary\">\n                {employeeName} - Project Report\n              </h2>\n              <p className=\"text-excel-sm text-excel-text-muted mt-excel-xs\">\n                Individual project hours and task performance\n              </p>\n            </div>\n            \n            {/* Data source toggle */}\n            <button\n              onClick={() => setUseRealData(!useRealData)}\n              className={cn(\n                \"px-excel-sm py-excel-xs text-excel-xs rounded-excel border transition-colors\",\n                useRealData \n                  ? \"bg-blue-50 text-blue-700 border-blue-200\" \n                  : \"bg-gray-50 text-gray-700 border-gray-200\"\n              )}\n              title={useRealData ? \"Switch to demo data\" : \"Switch to real API data\"}\n            >\n              {useRealData ? \"API Data\" : \"Demo Data\"}\n            </button>\n            \n            {/* Loading indicator */}\n            {isLoading && (\n              <div className=\"flex items-center space-x-excel-xs text-excel-sm text-excel-text-muted\">\n                <Loader2 className=\"w-4 h-4 animate-spin\" />\n                <span>Loading...</span>\n              </div>\n            )}\n            \n            {/* Error indicator */}\n            {error && (\n              <div className=\"flex items-center space-x-excel-xs text-excel-sm text-red-600\">\n                <AlertCircle className=\"w-4 h-4\" />\n                <span>Error</span>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"flex items-center space-x-excel-lg\">\n            {/* Refresh button */}\n            {useRealData && userId && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                leftIcon={<RefreshCw className=\"w-4 h-4\" />}\n                onClick={() => fetchEmployeeTaskLogs(userId, selectedMonth)}\n                disabled={isLoading}\n              >\n                Refresh\n              </Button>\n            )}\n            \n            <Select\n              label=\"\"\n              options={generateMonthOptions()}\n              value={selectedMonth}\n              onChange={(e) => setSelectedMonth(e.target.value)}\n              className=\"w-48\"\n              disabled={isLoading}\n            />\n            <Button \n              leftIcon={<Download className=\"w-4 h-4\" />} \n              onClick={exportToExcel}\n              disabled={isLoading}\n            >\n              Export\n            </Button>\n          </div>\n        </div>\n\n        {/* Excel-like Report Table */}\n        <div className=\"bg-white border border-excel-border rounded-excel overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full border-collapse\">\n              {/* Column Headers */}\n              <thead>\n                {/* Excel Column Letters Row */}\n                <tr className=\"bg-excel-gray-100 border-b border-excel-border\">\n                  <th className=\"w-12 h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"></th>\n                  {columnHeaders.map((col, index) => (\n                    <th\n                      key={col}\n                      className={cn(\n                        'h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center',\n                        index === 0 && 'w-48', // Project column\n                        index === 1 && 'w-24', // Total Hours column\n                        index === 2 && 'w-24', // Task Count column\n                        index === 3 && 'w-32', // Avg Hours/Task column\n                        index > 3 && 'w-20' // Other columns\n                      )}\n                    >\n                      {col}\n                    </th>\n                  ))}\n                </tr>\n                {/* Column Names Row */}\n                <tr className=\"bg-excel-header border-b border-excel-border\">\n                  <th className=\"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"></th>\n                  <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-left\">\n                    Project\n                  </th>\n                  <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\">\n                    Total Hours\n                  </th>\n                  <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\">\n                    Task Count\n                  </th>\n                  <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\">\n                    Avg Hours/Task\n                  </th>\n                </tr>\n              </thead>\n\n              {/* Data Rows */}\n              <tbody>\n                {isLoading ? (\n                  <tr>\n                    <td colSpan={5} className=\"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-excel-text-muted bg-excel-gray-50\">\n                      <div className=\"flex items-center justify-center space-x-excel-md\">\n                        <Loader2 className=\"w-4 h-4 animate-spin\" />\n                        <span>Loading employee report...</span>\n                      </div>\n                    </td>\n                  </tr>\n                ) : error ? (\n                  <tr>\n                    <td colSpan={5} className=\"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-red-600 bg-red-50\">\n                      <div className=\"flex items-center justify-center space-x-excel-md\">\n                        <AlertCircle className=\"w-4 h-4\" />\n                        <span>{error}</span>\n                        {userId && (\n                          <button\n                            onClick={() => fetchEmployeeTaskLogs(userId, selectedMonth)}\n                            className=\"text-blue-600 hover:text-blue-700 underline\"\n                          >\n                            Retry\n                          </button>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ) : reportData.length === 0 ? (\n                  <tr>\n                    <td colSpan={5} className=\"h-16 px-excel-md py-excel-sm text-center text-excel-sm text-excel-text-muted bg-excel-gray-50\">\n                      No task logs found for {employeeName} in the selected period.\n                    </td>\n                  </tr>\n                ) : (\n                  reportData.map((row, rowIndex) => (\n                  <tr key={row.project} className=\"hover:bg-excel-hover border-b border-excel-border\">\n                    {/* Row Number */}\n                    <td className=\"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center\">\n                      {rowIndex + 1}\n                    </td>\n                    \n                    {/* Project */}\n                    <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary font-medium\">\n                      {row.project}\n                    </td>\n                    \n                    {/* Total Hours */}\n                    <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\">\n                      {row.totalHours}\n                    </td>\n                    \n                    {/* Task Count */}\n                    <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\">\n                      {row.taskCount}\n                    </td>\n                    \n                    {/* Avg Hours/Task */}\n                    <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\">\n                      {row.avgHoursPerTask.toFixed(2)}\n                    </td>\n                  </tr>\n                  ))\n                )}\n                \n                {/* Summary Row */}\n                {!isLoading && !error && reportData.length > 0 && (\n                <tr className=\"bg-excel-gray-100 border-t-2 border-excel-border font-semibold\">\n                  {/* Row Number */}\n                  <td className=\"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center\">\n                    {reportData.length + 1}\n                  </td>\n                  \n                  {/* Project */}\n                  <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary font-bold\">\n                    TOTAL\n                  </td>\n                  \n                  {/* Total Hours */}\n                  <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\">\n                    {summaryTotals.totalHours}\n                  </td>\n                  \n                  {/* Task Count */}\n                  <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\">\n                    {summaryTotals.taskCount}\n                  </td>\n                  \n                  {/* Avg Hours/Task */}\n                  <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\">\n                    {summaryTotals.taskCount > 0 ? (summaryTotals.totalHours / summaryTotals.taskCount).toFixed(2) : '0'}\n                  </td>\n                </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Summary Stats */}\n        {/* <div className=\"grid grid-cols-1 md:grid-cols-3 gap-excel-xl\">\n          <div className=\"bg-white border border-excel-border rounded-excel p-excel-xl\">\n            <h3 className=\"text-excel-lg font-semibold text-excel-text-primary mb-excel-sm\">\n              Total Projects\n            </h3>\n            <p className=\"text-excel-2xl font-bold text-excel-blue-500\">\n              {reportData.length}\n            </p>\n          </div>\n          <div className=\"bg-white border border-excel-border rounded-excel p-excel-xl\">\n            <h3 className=\"text-excel-lg font-semibold text-excel-text-primary mb-excel-sm\">\n              Total Hours\n            </h3>\n            <p className=\"text-excel-2xl font-bold text-green-500\">\n              {summaryTotals.totalHours}\n            </p>\n          </div>\n          <div className=\"bg-white border border-excel-border rounded-excel p-excel-xl\">\n            <h3 className=\"text-excel-lg font-semibold text-excel-text-primary mb-excel-sm\">\n              Total Tasks\n            </h3>\n            <p className=\"text-excel-2xl font-bold text-orange-500\">\n              {summaryTotals.taskCount}\n            </p>\n          </div>\n        </div> */}\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default EmployeeReport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}