{"ast":null,"code":"var _jsxFileName = \"/Users/obs-fa/Downloads/Front End/src/pages/EmployeeReport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Select from '../components/ui/Select';\nimport { cn } from '../utils/helpers';\nimport { Download, ArrowLeft } from 'lucide-react';\nimport { SAMPLE_LOG_DATA } from '../constants/sampleLogData';\nimport { DUMMY_PROJECTS } from '../constants/dummyData';\nimport { timesheetService } from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeReport = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const employeeName = searchParams.get('name') || 'Employee';\n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7)); // YYYY-MM format\n\n  // API state management\n  const [apiTaskLogs, setApiTaskLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [useRealData, setUseRealData] = useState(true); // Default to API data\n\n  // Fetch employee task logs from API\n  const fetchEmployeeTaskLogs = async (employeeId, month) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      let startDate;\n      let endDate;\n      if (month) {\n        // Convert YYYY-MM to date range\n        const [year, monthNum] = month.split('-');\n        const firstDay = new Date(parseInt(year), parseInt(monthNum) - 1, 1);\n        const lastDay = new Date(parseInt(year), parseInt(monthNum), 0);\n        startDate = firstDay.toISOString().split('T')[0];\n        endDate = lastDay.toISOString().split('T')[0];\n      }\n      const response = await timesheetService.getTaskLogsByEmployee(employeeId, startDate, endDate);\n      setApiTaskLogs(response.data.taskLogs || []);\n      console.log('Employee task logs fetched:', response.data.taskLogs);\n    } catch (err) {\n      console.error('Failed to fetch employee task logs:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch employee task logs');\n      setApiTaskLogs([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Generate month options for the last 12 months\n  const generateMonthOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 12; i++) {\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth() - i, 1);\n      const value = date.toISOString().slice(0, 7);\n      const label = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long'\n      });\n      options.push({\n        value,\n        label\n      });\n    }\n    return options;\n  };\n\n  // Process log data to generate employee report\n  const generateEmployeeReportData = () => {\n    const reportData = {};\n\n    // Initialize all projects\n    DUMMY_PROJECTS.forEach(project => {\n      reportData[project.name] = {\n        project: project.name,\n        totalHours: 0,\n        taskCount: 0,\n        avgHoursPerTask: 0\n      };\n    });\n\n    // Process log entries for selected month and user\n    const [year, month] = selectedMonth.split('-');\n    SAMPLE_LOG_DATA.forEach(log => {\n      const logDate = new Date(log.date);\n      if (logDate.getFullYear() === parseInt(year) && logDate.getMonth() === parseInt(month) - 1 && log.userId === parseInt(userId || '0')) {\n        log.tasks.forEach(task => {\n          if (reportData[task.projectName]) {\n            reportData[task.projectName].totalHours += task.hours;\n            reportData[task.projectName].taskCount += 1;\n          }\n        });\n      }\n    });\n\n    // Calculate average hours per task\n    Object.values(reportData).forEach(project => {\n      project.avgHoursPerTask = project.taskCount > 0 ? project.totalHours / project.taskCount : 0;\n    });\n    return Object.values(reportData).filter(project => project.totalHours > 0);\n  };\n  const reportData = generateEmployeeReportData();\n\n  // Calculate summary totals\n  const summaryTotals = reportData.reduce((totals, row) => ({\n    totalHours: totals.totalHours + row.totalHours,\n    taskCount: totals.taskCount + row.taskCount,\n    avgHoursPerTask: totals.avgHoursPerTask + row.avgHoursPerTask\n  }), {\n    totalHours: 0,\n    taskCount: 0,\n    avgHoursPerTask: 0\n  });\n\n  // Generate column headers (A, B, C, D, E)\n  const columnHeaders = ['A', 'B', 'C', 'D', 'E'];\n  const totalColumns = 5; // Project, Total Hours, Task Count, Avg Hours/Task, (empty for Excel feel)\n\n  const exportToExcel = () => {\n    // Create CSV content\n    const headers = ['Project', 'Total Hours', 'Task Count', 'Avg Hours/Task'];\n    const csvContent = [headers.join(','), ...reportData.map(row => [`\"${row.project}\"`, row.totalHours, row.taskCount, row.avgHoursPerTask.toFixed(2)].join(',')),\n    // Add summary row\n    ['\"TOTAL\"', summaryTotals.totalHours, summaryTotals.taskCount, summaryTotals.taskCount > 0 ? (summaryTotals.totalHours / summaryTotals.taskCount).toFixed(2) : '0'].join(',')].join('\\n');\n\n    // Create and download file\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${employeeName}_report_${selectedMonth}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const goBack = () => {\n    navigate('/employees');\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Employee Report\",\n    subtitle: `${employeeName} - Project hours and performance`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-excel-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-excel-lg\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"sm\",\n            leftIcon: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this),\n            onClick: goBack,\n            children: \"Back to Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-excel-xl font-semibold text-excel-text-primary\",\n              children: [employeeName, \" - Project Report\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-excel-sm text-excel-text-muted mt-excel-xs\",\n              children: \"Individual project hours and task performance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-excel-lg\",\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            label: \"\",\n            options: generateMonthOptions(),\n            value: selectedMonth,\n            onChange: e => setSelectedMonth(e.target.value),\n            className: \"w-48\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            leftIcon: /*#__PURE__*/_jsxDEV(Download, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 31\n            }, this),\n            onClick: exportToExcel,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-excel-border rounded-excel overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"w-full border-collapse\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-excel-gray-100 border-b border-excel-border\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"w-12 h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), columnHeaders.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: cn('h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center', index === 0 && 'w-48',\n                  // Project column\n                  index === 1 && 'w-24',\n                  // Total Hours column\n                  index === 2 && 'w-24',\n                  // Task Count column\n                  index === 3 && 'w-32',\n                  // Avg Hours/Task column\n                  index > 3 && 'w-20' // Other columns\n                  ),\n                  children: col\n                }, col, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-excel-header border-b border-excel-border\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-left\",\n                  children: \"Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\",\n                  children: \"Total Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\",\n                  children: \"Task Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\",\n                  children: \"Avg Hours/Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [reportData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-excel-hover border-b border-excel-border\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center\",\n                  children: rowIndex + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary font-medium\",\n                  children: row.project\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\",\n                  children: row.totalHours\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\",\n                  children: row.taskCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\",\n                  children: row.avgHoursPerTask.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this)]\n              }, row.project, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-excel-gray-100 border-t-2 border-excel-border font-semibold\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center\",\n                  children: reportData.length + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary font-bold\",\n                  children: \"TOTAL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\",\n                  children: summaryTotals.totalHours\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\",\n                  children: summaryTotals.taskCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\",\n                  children: summaryTotals.taskCount > 0 ? (summaryTotals.totalHours / summaryTotals.taskCount).toFixed(2) : '0'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeReport, \"G+8jRKSEZz8RL38nqWgwWPVrr8o=\", false, function () {\n  return [useParams, useSearchParams, useNavigate];\n});\n_c = EmployeeReport;\nexport default EmployeeReport;\nvar _c;\n$RefreshReg$(_c, \"EmployeeReport\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","useSearchParams","DashboardLayout","Button","Select","cn","Download","ArrowLeft","SAMPLE_LOG_DATA","DUMMY_PROJECTS","timesheetService","jsxDEV","_jsxDEV","EmployeeReport","_s","userId","searchParams","navigate","employeeName","get","selectedMonth","setSelectedMonth","Date","toISOString","slice","apiTaskLogs","setApiTaskLogs","isLoading","setIsLoading","error","setError","useRealData","setUseRealData","fetchEmployeeTaskLogs","employeeId","month","startDate","endDate","year","monthNum","split","firstDay","parseInt","lastDay","response","getTaskLogsByEmployee","data","taskLogs","console","log","err","Error","message","generateMonthOptions","options","currentDate","i","date","getFullYear","getMonth","value","label","toLocaleDateString","push","generateEmployeeReportData","reportData","forEach","project","name","totalHours","taskCount","avgHoursPerTask","logDate","tasks","task","projectName","hours","Object","values","filter","summaryTotals","reduce","totals","row","columnHeaders","totalColumns","exportToExcel","headers","csvContent","join","map","toFixed","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","goBack","title","subtitle","children","className","variant","size","leftIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","col","index","rowIndex","length","_c","$RefreshReg$"],"sources":["/Users/obs-fa/Downloads/Front End/src/pages/EmployeeReport.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport DashboardLayout from '../components/layouts/DashboardLayout';\nimport Button from '../components/ui/Button';\nimport Select from '../components/ui/Select';\nimport { cn } from '../utils/helpers';\nimport { Download, ArrowLeft, Loader2, AlertCircle, RefreshCw } from 'lucide-react';\nimport { SAMPLE_LOG_DATA } from '../constants/sampleLogData';\nimport { DUMMY_PROJECTS } from '../constants/dummyData';\nimport { DUMMY_USERS } from '../constants/dummyData';\nimport { timesheetService } from '../services';\n\ninterface EmployeeReportProps {}\n\ninterface EmployeeReportData {\n  project: string;\n  totalHours: number;\n  taskCount: number;\n  avgHoursPerTask: number;\n}\n\nconst EmployeeReport: React.FC<EmployeeReportProps> = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const employeeName = searchParams.get('name') || 'Employee';\n  \n  const [selectedMonth, setSelectedMonth] = useState(new Date().toISOString().slice(0, 7)); // YYYY-MM format\n  \n  // API state management\n  const [apiTaskLogs, setApiTaskLogs] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [useRealData, setUseRealData] = useState(true); // Default to API data\n\n  // Fetch employee task logs from API\n  const fetchEmployeeTaskLogs = async (employeeId: string, month?: string) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      let startDate: string | undefined;\n      let endDate: string | undefined;\n      \n      if (month) {\n        // Convert YYYY-MM to date range\n        const [year, monthNum] = month.split('-');\n        const firstDay = new Date(parseInt(year), parseInt(monthNum) - 1, 1);\n        const lastDay = new Date(parseInt(year), parseInt(monthNum), 0);\n        \n        startDate = firstDay.toISOString().split('T')[0];\n        endDate = lastDay.toISOString().split('T')[0];\n      }\n      \n      const response = await timesheetService.getTaskLogsByEmployee(employeeId, startDate, endDate);\n      setApiTaskLogs(response.data.taskLogs || []);\n      console.log('Employee task logs fetched:', response.data.taskLogs);\n    } catch (err) {\n      console.error('Failed to fetch employee task logs:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch employee task logs');\n      setApiTaskLogs([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Generate month options for the last 12 months\n  const generateMonthOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    \n    for (let i = 0; i < 12; i++) {\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth() - i, 1);\n      const value = date.toISOString().slice(0, 7);\n      const label = date.toLocaleDateString('en-US', { year: 'numeric', month: 'long' });\n      options.push({ value, label });\n    }\n    \n    return options;\n  };\n\n  // Process log data to generate employee report\n  const generateEmployeeReportData = (): EmployeeReportData[] => {\n    const reportData: { [key: string]: EmployeeReportData } = {};\n    \n    // Initialize all projects\n    DUMMY_PROJECTS.forEach(project => {\n      reportData[project.name] = {\n        project: project.name,\n        totalHours: 0,\n        taskCount: 0,\n        avgHoursPerTask: 0,\n      };\n    });\n\n    // Process log entries for selected month and user\n    const [year, month] = selectedMonth.split('-');\n    SAMPLE_LOG_DATA.forEach(log => {\n      const logDate = new Date(log.date);\n      if (logDate.getFullYear() === parseInt(year) && \n          logDate.getMonth() === parseInt(month) - 1 && \n          log.userId === parseInt(userId || '0')) {\n        log.tasks.forEach(task => {\n          if (reportData[task.projectName]) {\n            reportData[task.projectName].totalHours += task.hours;\n            reportData[task.projectName].taskCount += 1;\n          }\n        });\n      }\n    });\n\n    // Calculate average hours per task\n    Object.values(reportData).forEach(project => {\n      project.avgHoursPerTask = project.taskCount > 0 ? project.totalHours / project.taskCount : 0;\n    });\n\n    return Object.values(reportData).filter(project => project.totalHours > 0);\n  };\n\n  const reportData = generateEmployeeReportData();\n\n  // Calculate summary totals\n  const summaryTotals = reportData.reduce(\n    (totals, row) => ({\n      totalHours: totals.totalHours + row.totalHours,\n      taskCount: totals.taskCount + row.taskCount,\n      avgHoursPerTask: totals.avgHoursPerTask + row.avgHoursPerTask,\n    }),\n    { totalHours: 0, taskCount: 0, avgHoursPerTask: 0 }\n  );\n\n  // Generate column headers (A, B, C, D, E)\n  const columnHeaders = ['A', 'B', 'C', 'D', 'E'];\n  const totalColumns = 5; // Project, Total Hours, Task Count, Avg Hours/Task, (empty for Excel feel)\n\n  const exportToExcel = () => {\n    // Create CSV content\n    const headers = ['Project', 'Total Hours', 'Task Count', 'Avg Hours/Task'];\n    const csvContent = [\n      headers.join(','),\n      ...reportData.map(row => [\n        `\"${row.project}\"`,\n        row.totalHours,\n        row.taskCount,\n        row.avgHoursPerTask.toFixed(2),\n      ].join(',')),\n      // Add summary row\n      [\n        '\"TOTAL\"',\n        summaryTotals.totalHours,\n        summaryTotals.taskCount,\n        summaryTotals.taskCount > 0 ? (summaryTotals.totalHours / summaryTotals.taskCount).toFixed(2) : '0',\n      ].join(',')\n    ].join('\\n');\n\n    // Create and download file\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${employeeName}_report_${selectedMonth}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const goBack = () => {\n    navigate('/employees');\n  };\n\n  return (\n    <DashboardLayout title=\"Employee Report\" subtitle={`${employeeName} - Project hours and performance`}>\n      <div className=\"space-y-excel-xl\">\n        {/* Header Actions */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-excel-lg\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              leftIcon={<ArrowLeft className=\"w-4 h-4\" />}\n              onClick={goBack}\n            >\n              Back to Employees\n            </Button>\n            <div>\n              <h2 className=\"text-excel-xl font-semibold text-excel-text-primary\">\n                {employeeName} - Project Report\n              </h2>\n              <p className=\"text-excel-sm text-excel-text-muted mt-excel-xs\">\n                Individual project hours and task performance\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-excel-lg\">\n            <Select\n              label=\"\"\n              options={generateMonthOptions()}\n              value={selectedMonth}\n              onChange={(e) => setSelectedMonth(e.target.value)}\n              className=\"w-48\"\n            />\n            <Button leftIcon={<Download className=\"w-4 h-4\" />} onClick={exportToExcel}>\n              Export\n            </Button>\n          </div>\n        </div>\n\n        {/* Excel-like Report Table */}\n        <div className=\"bg-white border border-excel-border rounded-excel overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full border-collapse\">\n              {/* Column Headers */}\n              <thead>\n                {/* Excel Column Letters Row */}\n                <tr className=\"bg-excel-gray-100 border-b border-excel-border\">\n                  <th className=\"w-12 h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"></th>\n                  {columnHeaders.map((col, index) => (\n                    <th\n                      key={col}\n                      className={cn(\n                        'h-6 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center',\n                        index === 0 && 'w-48', // Project column\n                        index === 1 && 'w-24', // Total Hours column\n                        index === 2 && 'w-24', // Task Count column\n                        index === 3 && 'w-32', // Avg Hours/Task column\n                        index > 3 && 'w-20' // Other columns\n                      )}\n                    >\n                      {col}\n                    </th>\n                  ))}\n                </tr>\n                {/* Column Names Row */}\n                <tr className=\"bg-excel-header border-b border-excel-border\">\n                  <th className=\"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted\"></th>\n                  <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-left\">\n                    Project\n                  </th>\n                  <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\">\n                    Total Hours\n                  </th>\n                  <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\">\n                    Task Count\n                  </th>\n                  <th className=\"h-8 px-excel-md border-r border-excel-border bg-excel-header text-excel-sm font-medium text-white text-center\">\n                    Avg Hours/Task\n                  </th>\n                </tr>\n              </thead>\n\n              {/* Data Rows */}\n              <tbody>\n                {reportData.map((row, rowIndex) => (\n                  <tr key={row.project} className=\"hover:bg-excel-hover border-b border-excel-border\">\n                    {/* Row Number */}\n                    <td className=\"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center\">\n                      {rowIndex + 1}\n                    </td>\n                    \n                    {/* Project */}\n                    <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary font-medium\">\n                      {row.project}\n                    </td>\n                    \n                    {/* Total Hours */}\n                    <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\">\n                      {row.totalHours}\n                    </td>\n                    \n                    {/* Task Count */}\n                    <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\">\n                      {row.taskCount}\n                    </td>\n                    \n                    {/* Avg Hours/Task */}\n                    <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-white text-excel-sm text-excel-text-primary text-center\">\n                      {row.avgHoursPerTask.toFixed(2)}\n                    </td>\n                  </tr>\n                ))}\n                \n                {/* Summary Row */}\n                <tr className=\"bg-excel-gray-100 border-t-2 border-excel-border font-semibold\">\n                  {/* Row Number */}\n                  <td className=\"w-12 h-8 border-r border-excel-border bg-excel-gray-200 text-excel-xs font-medium text-excel-text-muted text-center\">\n                    {reportData.length + 1}\n                  </td>\n                  \n                  {/* Project */}\n                  <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary font-bold\">\n                    TOTAL\n                  </td>\n                  \n                  {/* Total Hours */}\n                  <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\">\n                    {summaryTotals.totalHours}\n                  </td>\n                  \n                  {/* Task Count */}\n                  <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\">\n                    {summaryTotals.taskCount}\n                  </td>\n                  \n                  {/* Avg Hours/Task */}\n                  <td className=\"h-8 px-excel-md py-excel-sm border-r border-excel-border bg-excel-gray-100 text-excel-sm text-excel-text-primary text-center font-bold\">\n                    {summaryTotals.taskCount > 0 ? (summaryTotals.totalHours / summaryTotals.taskCount).toFixed(2) : '0'}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Summary Stats */}\n        {/* <div className=\"grid grid-cols-1 md:grid-cols-3 gap-excel-xl\">\n          <div className=\"bg-white border border-excel-border rounded-excel p-excel-xl\">\n            <h3 className=\"text-excel-lg font-semibold text-excel-text-primary mb-excel-sm\">\n              Total Projects\n            </h3>\n            <p className=\"text-excel-2xl font-bold text-excel-blue-500\">\n              {reportData.length}\n            </p>\n          </div>\n          <div className=\"bg-white border border-excel-border rounded-excel p-excel-xl\">\n            <h3 className=\"text-excel-lg font-semibold text-excel-text-primary mb-excel-sm\">\n              Total Hours\n            </h3>\n            <p className=\"text-excel-2xl font-bold text-green-500\">\n              {summaryTotals.totalHours}\n            </p>\n          </div>\n          <div className=\"bg-white border border-excel-border rounded-excel p-excel-xl\">\n            <h3 className=\"text-excel-lg font-semibold text-excel-text-primary mb-excel-sm\">\n              Total Tasks\n            </h3>\n            <p className=\"text-excel-2xl font-bold text-orange-500\">\n              {summaryTotals.taskCount}\n            </p>\n          </div>\n        </div> */}\n      </div>\n    </DashboardLayout>\n  );\n};\n\nexport default EmployeeReport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}